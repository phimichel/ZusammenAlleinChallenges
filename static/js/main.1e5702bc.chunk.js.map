{"version":3,"sources":["components/PlayCard.tsx","services/play-card-picture-service.ts","components/DetailView.tsx","components/EnhancedTableHead.tsx","components/EnhancedTableToolbar.tsx","components/EnhancedTable.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PlayCard","items","console","log","displayItems","length","array","count","i","push","fillArray","className","id","map","item","key","createPicture","a","playcard","document","querySelector","rect","getBoundingClientRect","html2canvas","scrollY","y","canvas","Promise","resolve","reject","toBlob","blob","PlayCardPictureService","downloadPicture","saveAs","name","Challenge","calories","Beschreibung","fat","carbs","protein","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","DetailView","classes","React","useState","selected","indexes","split","elems","getSelection","useParams","Button","variant","onClick","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","Tooltip","IconButton","aria-label","rows","descendingComparator","b","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","history","useHistory","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","idx","findIndex","it","join","App","exact","path","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e5702bc.chunk.js","sourcesContent":["import React from 'react'\n\nimport './PlayCard.scss'\n\ninterface PlayCardProps {\n  items?: string[]\n}\n\nconst fillArray = (array: string[], count: number = 25) => {\n  for (let i = array.length; i < count; i++) {\n    array.push('')\n  }\n\n  return array\n}\n\nexport const PlayCard: React.FC<PlayCardProps> = ({ items = []}) => {\n  console.log(items)\n  const displayItems = [...items]\n  if (displayItems.length < 25) {\n    fillArray(displayItems)\n  }\n\n  console.log(items)\n\n  return (\n    <div className=\"play-card\" id=\"play-card\">\n      {displayItems.map((item, i) => (\n        <div key={i} className=\"play-card__item\">\n          <span className=\"play-card__item-text\">{item}</span>\n        </div>    \n      ))}\n    </div>\n  )\n}","import html2canvas from 'html2canvas'\nimport { saveAs } from 'file-saver'\n\nconst createPicture = async (): Promise<Blob> => {\n  const playcard = document.querySelector('#play-card') as HTMLElement\n  const rect = playcard.getBoundingClientRect()\n\n  const canvas = await html2canvas(playcard, { scrollY: rect.y })\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (!blob) {\n        reject('Blob creation failed')\n      }\n\n      resolve(blob!)\n    });\n  })\n}\nconst downloadPicture = async () => {\n  const blob = await createPicture()\n\n  saveAs(blob, 'playcard.png')\n}\n\nexport const PlayCardPictureService = {\n  downloadPicture\n}","import { Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport React from 'react';\nimport { EnhancedTableHead } from './EnhancedTableHead';\nimport { EnhancedTableToolbar } from './EnhancedTableToolbar';\nimport { PlayCard } from './PlayCard';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport items from '../items.json';\nimport {useParams } from \"react-router-dom\";\n\nfunction createData(name: string, calories: string, fat: number, carbs: number, protein: number) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows =  createRows()\n\nfunction createRows() {\n  return items.map(item => createData(item.Challenge, item.Beschreibung, 3.7, 67, 4.3));\n\n}\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function DetailView() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n  let { id } = useParams();\n  const selected = getSelection(id)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  function getSelection(id) {\n    console.log(id)\n    /* truncate first the numbers */\n    var indexes = id.split(\",\", 25)\n    console.log(indexes)\n    /* filter items */\n    const elems = indexes.map(i => items[i].Challenge)\n    console.log(elems)\n    return elems\n  }\n  \n  return (\n    <div className={classes.root}>\n      <PlayCard items={selected} />\n      \n      <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n    </div>\n  );\n}","import React from \"react\";\nimport { TableHead, TableRow, TableCell, Checkbox, TableSortLabel } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Beschreibung' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nexport function EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};","import React from 'react'\nimport { makeStyles, lighten, Toolbar, Typography, Tooltip, IconButton } from \"@material-ui/core\"\nimport clsx from 'clsx';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport PropTypes from 'prop-types';\n\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nexport const EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};","import { Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport React from 'react';\nimport { EnhancedTableHead } from './EnhancedTableHead';\nimport { EnhancedTableToolbar } from './EnhancedTableToolbar';\nimport { PlayCard } from './PlayCard';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport items from '../items.json';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction createData(name: string, calories: string, fat: number, carbs: number, protein: number) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows =  createRows()\n\nfunction createRows() {\n  return items.map(item => createData(item.Challenge, item.Beschreibung, 3.7, 67, 4.3));\n\n}\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([] as string[]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [] as string[];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n  \n  const createLink = () => {     \n    history.push('/view/' + selected.map((i,idx) => items.findIndex(it => it.Challenge == i)).join(','))\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <PlayCard items={selected} />\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order as any, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <Button variant=\"contained\" onClick={createLink}>Gehe zu Link</Button>\n      <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n    </div>\n  );\n}","import { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport React from 'react'\nimport DetailView from \"./components/DetailView\"\nimport EnhancedTable from \"./components/EnhancedTable\"\n\nconst App = () => {\n  return (\n    <Router>\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/view/:id\">\n          <DetailView />\n        </Route>\n        <Route path=\"/dashboard\">\n          <EnhancedTable />\n        </Route>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/dashboard\" />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  )\n}\n \nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}