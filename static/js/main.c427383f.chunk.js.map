{"version":3,"sources":["customTheme.ts","App.tsx","serviceWorker.ts","index.tsx","services/autocomplete-service.ts","components/Tag.tsx","services/play-card-picture-service.ts","components/PlayCard.tsx","services/item-service.ts","components/DetailView.tsx","components/SimpleTable.tsx","components/EnhancedTable.tsx","components/EnhancedTableHead.tsx"],"names":["customTheme","createMuiTheme","palette","primary","main","data","warning","success","overrides","MuiCard","root","padding","width","margin","MuiTable","MuiTableHead","borderBottom","light","MuiTableRow","backgroundColor","lighter","MuiTableCell","alignRight","span","color","border","borderRadius","MuiTableSortLabel","gray","dark","MuiButton","boxShadow","opacity","bg","contained","MuiLink","textDecoration","MuiCheckbox","MuiSvgIcon","fill","MuiAppBar","colorPrimary","MuiBadge","MuiPaper","MuiOutlinedInput","typography","fontFamily","button","fontSize","fontWeight","h2","textAlign","h3","h6","h4","textTransform","body1","lineHeight","subtitle1","App","ThemeProvider","theme","className","AppBar","position","Toolbar","Typography","variant","exact","path","DetailView","EnhancedTable","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createLevelTag","value","field","label","createLevelTags","item","Level","createZielTag","createZielTags","Ziel","map","createTrainingTag","createTrainingTags","Training","createTeilnehmerTag","createTeilnehmerTags","Teilnehmer","createOrtTag","createOrtTags","Ort","createAltergruppeTag","createAltersgruppeTags","Altersgruppe","createTagsTag","createTagsTags","Tags","AutocompleteService","createAutocompleteOptions","allItems","ItemService","getAll","creators","optionsMap","tags","creator","tag","Object","values","Tag","props","onClick","children","createPicture","a","playcard","querySelector","documentRect","getBoundingClientRect","rect","html2canvas","y","Math","abs","top","scale","canvas","Promise","resolve","reject","toBlob","blob","PlayCardPictureService","downloadPicture","saveAs","PlayCard","items","displayItems","length","array","count","i","push","fillArray","id","key","isChecked","input","createOrtField","indoor","outdoor","ort","createTeilnehmerField","Anzahl_alleine","Anzahl_zwei","Anzahl_team","teilnehmer","alleine","zwei","Team","convert","Challenge","Beschreibung","Mindestalter","Anleitungslink","Schwierigkeitsgrad","entries","filter","entry","startsWith","split","createZielField","createTrainingField","text","link","Number","trim","getByIndex","index","convertedItem","getByIndeces","indeces","selected","Buffer","toString","getSelection","useParams","SimpleTable","style","marginBottom","marginTop","target","rel","href","rows","autoCompleteOptions","descendingComparator","b","orderBy","useStyles","makeStyles","paper","spacing","table","minWidth","visuallyHidden","clip","height","overflow","classes","React","useState","selectedTags","setSelectedTags","order","setOrder","setOrderBy","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","copyLink","setCopyLink","absoluteCopyLink","setAbsoluteCopyLink","whatsappLink","setWhatsappLink","useHistory","useEffect","idx","findIndex","it","join","currentLoc","basePath","slice","log","createAbsoluteLink","encodeURIComponent","createWhatsAppLink","addTag","ev","stopPropagation","tagsToFilterBy","option","includes","e","copy","open","display","marginLeft","noValidate","autoComplete","onSubmit","multiple","onChange","val","autoSelect","options","el","renderInput","params","aria-labelledby","size","aria-label","numSelected","onSelectAllClick","event","checked","newSelecteds","n","onRequestSort","property","rowCount","comparator","stabilizedThis","sort","stableSort","getComparator","row","every","rowValue","Array","isArray","some","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","disabled","inputProps","component","scope","align","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","headCells","numeric","disablePadding","enableSort","EnhancedTableHead","headCell","sortDirection","active","direction"],"mappings":"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","file":"static/js/main.c427383f.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core'\r\nimport data from './colors.json'\r\n\r\nexport const customTheme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: data.primary.main },\r\n    warning: { main: data.warning.main },\r\n    success: { main: data.success.main }\r\n  },\r\n  overrides: {\r\n    MuiCard: {\r\n      root: {\r\n        padding: '1.5em 2em',\r\n        width: '90%',\r\n        margin: '20px auto',\r\n      }\r\n    },\r\n    MuiTable: {\r\n      root: {\r\n\r\n      }\r\n    },\r\n    MuiTableHead: {\r\n      root: {\r\n        borderBottom: '3px solid ' +  data.primary.light\r\n      }\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        '&$selected': {\r\n          backgroundColor: data.primary.lighter\r\n        }\r\n      }\r\n    },\r\n    MuiTableCell: {\r\n      alignRight: {\r\n        span: {\r\n          color: data.primary.main,\r\n          padding: '5px 10px',\r\n          border: '1px solid ' + data.primary.main,\r\n          backgroundColor: data.primary.light,\r\n          borderRadius: 3\r\n        }\r\n      }\r\n    },\r\n    MuiTableSortLabel: {\r\n      root: {\r\n        color: data.gray.dark\r\n      }\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        borderRadius: 3,\r\n        padding: '1em 2em',\r\n        boxShadow: '0px 3px 6px ' + data.gray.light,\r\n        backgroundColor: data.primary.light,\r\n        '&$disabled': {\r\n          opacity: 1,\r\n          backgroundColor: data.gray.bg,\r\n        }\r\n      },\r\n      contained: {\r\n        color: '#ffffff',\r\n        borderRadius: 3,\r\n        padding: '1em 2em',\r\n        boxShadow: '0px 3px 6px ' + data.gray.light,\r\n        backgroundColor: data.primary.light,\r\n      },\r\n    },\r\n    MuiLink: {\r\n      root: {\r\n        color: data.primary.light,\r\n        textDecoration: 'none'\r\n      }\r\n    },\r\n    MuiCheckbox: {\r\n      root: {\r\n\r\n      }\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        fill: data.primary.light\r\n      }\r\n    },\r\n    MuiAppBar: {\r\n      root: {\r\n        boxShadow: 'none',\r\n      },\r\n      colorPrimary: {\r\n        backgroundColor: data.primary.main\r\n      }\r\n    },\r\n    MuiBadge: {\r\n      colorPrimary: {\r\n        color: '#ffffff'\r\n      }\r\n    },\r\n    MuiPaper: {\r\n      root: {\r\n        borderRadius: 0\r\n      }\r\n    },\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        borderRadius: 35\r\n      }\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Roboto, Helvetica, sans-serif',\r\n    button: {\r\n      fontSize: '0.65em',\r\n      fontWeight: 900\r\n    },\r\n    h2: {\r\n      color: data.primary.light,\r\n      fontSize: '28px',\r\n      textAlign: 'center',\r\n      fontWeight: 400,\r\n      margin: '50px 20px 20px'\r\n    },\r\n    h3: {\r\n      textAlign: 'left',\r\n      color: data.primary.light,\r\n      margin: '20px 0px',\r\n      fontSize: '24px'\r\n    },\r\n    h6: {\r\n      textAlign: 'center'\r\n    },\r\n    h4: {\r\n      color: data.primary.main,\r\n      fontSize: '0.85rem',\r\n      textTransform: 'uppercase'\r\n    },\r\n    body1: {\r\n      lineHeight: 1\r\n    },\r\n    subtitle1: {\r\n      textAlign: 'center',\r\n      fontSize: '14px'\r\n    }\r\n  }\r\n})","import { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport React from 'react'\r\nimport DetailView from \"./components/DetailView\"\r\nimport EnhancedTable from \"./components/EnhancedTable\"\r\nimport { AppBar, Toolbar, Typography, ThemeProvider, Backdrop, CircularProgress } from '@material-ui/core';\r\nimport { customTheme } from \"./customTheme\"\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <Router>\r\n      <div className=\"app\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            ZusammenAlleinImVerein\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Switch>\r\n          <Route exact path=\"/view/:id\">\r\n            <DetailView />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <EnhancedTable />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  </ThemeProvider>\r\n  )}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { ItemService, ChallangeItem } from './item-service';\r\n\r\nexport interface TagOption {\r\n  field: string\r\n  value: any\r\n  label: string\r\n}\r\n\r\ntype TagCreator = (item: ChallangeItem) => TagOption[]\r\n\r\n\r\nexport const createLevelTag = (value) => ({\r\n  field: 'Level',\r\n  value: value,\r\n  label: `Level ${value}`\r\n})\r\n\r\nconst createLevelTags: TagCreator = (item) => {\r\n  return [createLevelTag(item.Level)]\r\n}\r\n\r\nexport const createZielTag = (value) => ({\r\n  field: 'Ziel',\r\n  value: value,\r\n  label: value\r\n})\r\n\r\nconst createZielTags: TagCreator = (item) => {\r\n  return item.Ziel.map(createZielTag)\r\n}\r\n\r\nexport const createTrainingTag = (value) => ({\r\n  field: 'Training',\r\n  value: value,\r\n  label: value\r\n})\r\n\r\nconst createTrainingTags: TagCreator = (item) => {\r\n  return item.Training.map(createTrainingTag)\r\n}\r\n\r\nexport const createTeilnehmerTag = (value) => ({\r\n  field: 'Teilnehmer',\r\n  value: value,\r\n  label: value\r\n})\r\n\r\nconst createTeilnehmerTags: TagCreator = (item) => {\r\n  return item.Teilnehmer.map(createTeilnehmerTag)\r\n}\r\n\r\nexport const createOrtTag = (value) => ({\r\n  field: 'Ort',\r\n  value: value,\r\n  label: value\r\n})\r\n\r\nconst createOrtTags: TagCreator = (item) => {\r\n  return item.Ort.map(createOrtTag)\r\n}\r\n\r\nexport const createAltergruppeTag = (value) => ({\r\n  field: 'Altersgruppe',\r\n  value: value,\r\n  label: `ab ${value} Jahren`\r\n})\r\n\r\nconst createAltersgruppeTags: TagCreator = (item) => {\r\n  return [createAltergruppeTag(item.Altersgruppe)]\r\n}\r\n\r\nexport const createTagsTag = (value) => ({\r\n  field: 'Tags',\r\n  value: value,\r\n  label: value\r\n})\r\n\r\nconst createTagsTags: TagCreator = (item) => {\r\n  return item.Tags.map(createTagsTag)\r\n}\r\n\r\nconst createAutocompleteOptions = (): TagOption[] => {\r\n  const allItems = ItemService.getAll()\r\n\r\n  const creators = [\r\n    createLevelTags,\r\n    createZielTags,\r\n    createTrainingTags,\r\n    createTeilnehmerTags,\r\n    createOrtTags,\r\n    createAltersgruppeTags,\r\n    createTagsTags\r\n  ]\r\n\r\n  /* HashTable with labels as keys */\r\n  const optionsMap = {}  \r\n  for (const item of allItems) {\r\n    for (const creator of creators) {\r\n      const tags = creator(item)\r\n\r\n      for (const tag of tags) {\r\n        optionsMap[tag.label] = tag\r\n      }\r\n    }\r\n  }\r\n\r\n  return Object.values(optionsMap)\r\n}\r\n\r\nexport const AutocompleteService = {\r\n  createAutocompleteOptions\r\n}\r\n","import React, { SyntheticEvent } from 'react'\r\nimport './Tag.scss'\r\n\r\ninterface TagProps {\r\n  onClick?: (ev: SyntheticEvent) => void\r\n}\r\n\r\nexport const Tag: React.FC<TagProps> = (props) => {\r\n  return (\r\n    <span className=\"tag\" onClick={props.onClick}>{props.children}</span>\r\n  )\r\n}","import html2canvas from 'html2canvas'\r\nimport { saveAs } from 'file-saver'\r\n\r\nconst createPicture = async (): Promise<Blob> => {\r\n  const playcard = document.querySelector('#play-card') as HTMLElement\r\n  const documentRect = document.querySelector('body')?.getBoundingClientRect()\r\n  const rect = playcard.getBoundingClientRect()\r\n\r\n  const canvas = await html2canvas(playcard, { y: Math.abs(documentRect!.top - rect.top), scale: 1})\r\n\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob((blob) => {\r\n      if (!blob) {\r\n        reject('Blob creation failed')\r\n      }\r\n\r\n      resolve(blob!)\r\n    });\r\n  })\r\n}\r\nconst downloadPicture = async () => {\r\n  const blob = await createPicture()\r\n\r\n  saveAs(blob, 'playcard.png')\r\n}\r\n\r\nexport const PlayCardPictureService = {\r\n  downloadPicture\r\n}","import React from 'react'\r\n\r\nimport './PlayCard.scss'\r\n\r\ninterface PlayCardProps {\r\n  items?: string[]\r\n}\r\n\r\nconst fillArray = (array: string[], count: number = 16) => {\r\n  for (let i = array.length; i < count; i++) {\r\n    array.push('')\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport const PlayCard: React.FC<PlayCardProps> = ({ items = []}) => {\r\n  const displayItems = [...items]\r\n  if (displayItems.length < 16) {\r\n    fillArray(displayItems)\r\n  }\r\n\r\n  return (\r\n        <div className=\"play-card\" id=\"play-card\">\r\n          {displayItems.map((item, i) => (\r\n            <div key={i} className=\"play-card__item\">\r\n              <span className=\"play-card__item-text\">{item}</span>\r\n            </div>    \r\n          ))}\r\n        </div>\r\n  )\r\n}","import items from '../items.json'\r\n\r\ntype JSONItem = typeof items[0]\r\n\r\nenum Ziel {\r\n  Spass = 'Spass',\r\n  Socialising = 'Socialising',\r\n  Training = 'Training',\r\n}\r\n\r\nenum Training {\r\n  Kraft = 'Kraft',\r\n  Ausdauer = 'Ausdauer',\r\n  Geschick = 'Geschick',\r\n  Schnelligkeit = 'Schnelligkeit',\r\n}\r\n\r\nenum Teilnehmer {\r\n  alleine = 'Alleine',\r\n  zwei = 'Zwei',\r\n  Team = 'Team',\r\n}\r\n\r\nenum Ort {\r\n  indoor = 'Indoor',\r\n  outdoor = 'Outdoor',\r\n}\r\n\r\nexport interface ChallangeItem {\r\n  Challenge: string\r\n  Beschreibung: {\r\n    text: string\r\n    link: string\r\n  }\r\n  Level: number\r\n  Ziel: Ziel[]\r\n  Training: Training[]\r\n  Teilnehmer: Teilnehmer[]\r\n  Ort: Ort[]\r\n  Altersgruppe: number\r\n  Tags: string[]\r\n}\r\n\r\nconst isChecked = (input: string): boolean => {\r\n  return input === 'x'\r\n}\r\n\r\nconst createOrtField = (item: JSONItem): Ort[] => {\r\n  const { indoor, outdoor } = item\r\n\r\n  const ort = [] as Ort[]\r\n\r\n  if (isChecked(indoor)) {\r\n    ort.push(Ort.indoor)\r\n  }\r\n\r\n  if (isChecked(outdoor)) {\r\n    ort.push(Ort.outdoor)\r\n  }\r\n\r\n  return ort\r\n}\r\n\r\nconst createZielField = (item: JSONItem) => {\r\n  return Object.entries(item)\r\n    .filter(entry => entry[0].startsWith('Ziel_'))\r\n    .filter(entry => isChecked(entry[1] as string))\r\n    .map(entry => entry[0].split('_')[1]) as Ziel[]\r\n}\r\n\r\nconst createTrainingField = (item: JSONItem) => {\r\n  return Object.entries(item)\r\n    .filter(entry => entry[0].startsWith('Effekt_'))\r\n    .filter(entry => isChecked(entry[1] as string))\r\n    .map(entry => entry[0].split('_')[1]) as Training[]\r\n}\r\n\r\nconst createTeilnehmerField = (item: JSONItem): Teilnehmer[] => {\r\n  const { Anzahl_alleine, Anzahl_zwei, Anzahl_team } = item\r\n\r\n  const teilnehmer = [] as Teilnehmer[]\r\n  if (isChecked(Anzahl_alleine)) {\r\n    teilnehmer.push(Teilnehmer.alleine)\r\n  }\r\n  if (isChecked(Anzahl_zwei)) {\r\n    teilnehmer.push(Teilnehmer.zwei)\r\n  }\r\n  if (isChecked(Anzahl_team)) {\r\n    teilnehmer.push(Teilnehmer.Team)\r\n  }\r\n\r\n  return teilnehmer\r\n}\r\n\r\n\r\nconst convert = (item: JSONItem): ChallangeItem => {\r\n  const {\r\n    Challenge,\r\n    Beschreibung,\r\n    Mindestalter,\r\n    Anleitungslink,\r\n    Tags,\r\n    Schwierigkeitsgrad\r\n  } = item\r\n\r\n  const Ort = createOrtField(item)\r\n  const Teilnehmer = createTeilnehmerField(item)\r\n  const Ziel = createZielField(item)\r\n  const Training = createTrainingField(item)\r\n\r\n  return {\r\n    Challenge: Challenge,\r\n    Beschreibung: {\r\n      text: Beschreibung,\r\n      link: Anleitungslink\r\n    },\r\n    Altersgruppe: Number(Mindestalter) || 6,\r\n    Level: Number(Schwierigkeitsgrad) || 1,\r\n    Tags: Tags.split(',').map(item => item.trim()).filter(item => !!item),\r\n    Ort,\r\n    Teilnehmer,\r\n    Ziel,\r\n    Training\r\n  }\r\n}\r\n\r\nconst getAll = () => {\r\n  return items.map(convert)\r\n}\r\n\r\nconst getByIndex = (index: number) => {\r\n  const item = items[index]\r\n\r\n  let convertedItem: ChallangeItem | null = null\r\n  if (!item) {\r\n    convertedItem = convert(item)\r\n  }\r\n\r\n  return convertedItem\r\n}\r\n\r\nconst getByIndeces = (indeces: number[]): ChallangeItem[] => {\r\n  return indeces.map(getByIndex).filter(item => !!item) as ChallangeItem[]\r\n}\r\n\r\nexport const ItemService = {\r\n  getAll,\r\n  getByIndex,\r\n  getByIndeces\r\n}","import { Button, Typography, Card } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport items from '../items.json';\r\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\r\nimport { PlayCard } from './PlayCard';\r\nimport { SimpleTable } from './SimpleTable';\r\n\r\nimport './DetailView.scss'\r\n\r\nexport default function DetailView() {\r\n  let { id } = useParams();\r\n  const selected = getSelection(id)\r\n\r\n  const createPicture = () => {\r\n    PlayCardPictureService.downloadPicture()\r\n  }\r\n\r\n  function getSelection(id) {\r\n    /* truncate first the numbers */\r\n    var indexes = new Buffer(id, 'base64').toString('ascii').split(\",\", 25)\r\n    /* filter items */\r\n    const elems = indexes.map(i => items[i])\r\n    return elems\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Typography variant=\"h2\">\r\n        Willkommen bei deiner<br/>ZusammenAlleinImVerein-Challenge\r\n      </Typography>\r\n      <Card className=\"half\">\r\n        <Typography variant=\"h3\">\r\n          Bingo-Challenge-Card\r\n        </Typography>\r\n        <PlayCard items={selected.map(item => item.Challenge)} />\r\n      </Card>\r\n      <Card className=\"half\">\r\n      <div className=\"rules\">\r\n        <Typography variant=\"h3\">\r\n          Allgemeine Regeln\r\n        </Typography>\r\n        <ol className=\"rules\">\r\n          <li>In welcher Reihenfolge du die Challenges erledigst ist dir überlassen</li>\r\n          <li>Jede Challenge wird genau einmal gewertet, du warst sie aber natürlich so oft du willst absolvieren</li>\r\n          <li>Pro Tag darfst du eine Challenge einreichen</li>\r\n          <li>Als Challengebeweis postest du ein Foto, Video oder Screenshot (z.b. absolvierte Strecke in Running App). Wenn du bescheißt, dann nur dich selbst.</li>\r\n          <li>Hast du eine Challenge absolviert, kannst du sie wegstreichen, du selbst behältst den Überblick.</li>\r\n          <li>Wenn du alle Challenges geschafft hast, beweis es mit einer Fotocollage und freu dich - Du hast dich Fit gehalten!</li>\r\n        </ol>\r\n      </div>\r\n      </Card>\r\n      <Card>\r\n        <Typography variant=\"h3\">\r\n            Challenges\r\n        </Typography>\r\n        <SimpleTable items={selected} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './SimpleTable.scss'\r\nimport { Paper } from '@material-ui/core';\r\n\r\ninterface SimpleTableProps {\r\n    items?: any[]\r\n}\r\n\r\nexport const SimpleTable: React.FC<SimpleTableProps> = ({ items = [] }) => {\r\n    const displayItems = [...items]\r\n    return (\r\n        <div className=\"card\" id=\"table-card\">\r\n            <div className=\"simple-table\">\r\n                    {displayItems.map((item: any, index: number) => {\r\n                        return (\r\n                            <Paper variant=\"outlined\">\r\n                                <div style={{ marginBottom: '20px' }}><strong>{item.Challenge}</strong></div>\r\n                                <div>{item.Beschreibung}</div>\r\n                                <div style={{ marginTop: '20px' }}>{item.Anleitungslink && <a target=\"_blank\" rel=\"noopener noreferrer\" href={item.Anleitungslink}>Anleitung</a>}</div>\r\n                            </Paper>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Button, TextField, Typography, Card, Link } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport React, { SyntheticEvent, useEffect } from 'react';\r\nimport { EnhancedTableHead } from './EnhancedTableHead';\r\nimport { PlayCard } from './PlayCard';\r\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ItemService, ChallangeItem } from '../services/item-service';\r\nimport { Tag } from './Tag';\r\nimport { AutocompleteService, createLevelTag, TagOption, createZielTag, createTrainingTag, createOrtTag, createTeilnehmerTag, createAltergruppeTag, createTagsTag } from '../services/autocomplete-service';\r\nimport copy from 'copy-to-clipboard'\r\n\r\nconst rows = ItemService.getAll()\r\nconst autoCompleteOptions = AutocompleteService.createAutocompleteOptions()\r\n\r\nfunction descendingComparator(a: any, b: any, orderBy: string) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\r\n  return order === 'desc'\r\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\r\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    padding: '0',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [selectedTags, setSelectedTags] = React.useState([] as string[])\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([] as string[]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n  const [copyLink, setCopyLink] = React.useState('');\r\n  const [absoluteCopyLink, setAbsoluteCopyLink] = React.useState('');\r\n  const [whatsappLink, setWhatsappLink] = React.useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const createWhatsAppLink = (): string => {\r\n    const text = \"Hier ist deine neue Bingokarte: \"\r\n    const link = \"whatsapp://send?text=\" + encodeURIComponent(text + absoluteCopyLink)\r\n    console.log('whatsapp link', link)\r\n\r\n    return link\r\n  }\r\n  const createAbsoluteLink = (): string => {\r\n    const currentLoc = window.location.href;\r\n    const basePath = currentLoc.slice(0, currentLoc.length - 1)\r\n\r\n    console.log(basePath, copyLink)\r\n    return basePath + copyLink;\r\n  }\r\n  const createLink = (): string => {\r\n    return '/view/' + new Buffer(selected.map((i, idx) => rows.findIndex(it => it.Challenge === i)).join(',')).toString('base64')\r\n  }\r\n  const navigateToLink = () => {\r\n    window.open(absoluteCopyLink)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCopyLink(createLink())\r\n  }, [selected])\r\n\r\n  useEffect(() => {\r\n    setAbsoluteCopyLink(createAbsoluteLink())\r\n  }, [copyLink])\r\n\r\n  useEffect(() => {\r\n    setWhatsappLink(createWhatsAppLink())\r\n  }, [absoluteCopyLink])\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.Challenge);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [] as string[];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    if (newSelected.length > 16) {\r\n      return\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const createPicture = () => {\r\n    PlayCardPictureService.downloadPicture()\r\n  }\r\n\r\n  const addTag = (tag: TagOption, ev: SyntheticEvent) => {\r\n    ev.stopPropagation()\r\n    setSelectedTags([...selectedTags, tag.label])\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const copyToClipboard = e => {\r\n    copy(absoluteCopyLink);\r\n  }\r\n\r\n  const tagsToFilterBy = autoCompleteOptions.filter(option => selectedTags.includes(option.label))\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h2\">\r\n        Challenge-Card\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        <div id=\"intro\">\r\n          <h4>Du bist Trainer/in und m&ouml;chtest dein Sportteam weiter fit halten?</h4> \r\n          <h4>Du bist Vereinsmitglied und vermisst deine Sportskollegen und -kolleginnen?</h4>\r\n          <p>\r\n          Wenn du Cybertraining ausprobieren m&ouml;chtest haben wir <a href=\"https://lutzkohl.github.io/Cybertraining/\" target=\"blank\">hier</a> alle Infos für dich. Weiterhin haben wir unten Challenges zusammengestellt, damit ihr euch trotz Social Distancing physisch und mental fit halten und miteinander in Kontakt treten k&ouml;nnt.\r\n          Lasst euer Vereinsleben wieder aufblühen und bleibt aktiv. Also auf geht's runter von der Couch und ran an die Challenges!<br/><br/>\r\n          Erstelle dir deine individuelle ZusammenAlleinImVerein Bingo Card mit 16 Challenges zusammen. W&auml;hle dazu einfach Challenges an und die Seite generiert speziell für dich und dein Team eine Bingo Card. Du kannst auch nach deinen W&uuml;nschen Filterungen der Challenges &uuml;ber die Suchfunktion vornehmen. Viel Spaß dabei!<br/>\r\n          Wir freuen uns &uuml;ber eure Videos und Bilder zu den Challenges mit dem Hashtag #ZusammenAlleinImVerein.<br/><br/>\r\n          Du hast Anregungen f&uuml;r weitere Challenges, die in der Liste fehlen? Schick sie an folgende E-Mailadresse: <a href=\"mailto:zusammenalleinchallenge@gmail.com\">zusammenalleinchallenge@gmail.com</a>.\r\n          </p>\r\n        </div>\r\n      </Typography>\r\n      <Card>\r\n        <PlayCard items={selected} />\r\n          <Button variant=\"contained\" onClick={copyToClipboard} className=\"map-btn\">Kopiere Link</Button>\r\n          <Button variant=\"contained\" onClick={navigateToLink} className=\"map-btn\">Gehe zu Seite</Button>\r\n          <Button variant=\"contained\" href={whatsappLink} className=\"button-whatsapp map-btn\">In Whatsapp teilen</Button>\r\n          <Button variant=\"contained\" onClick={createPicture} className=\"map-btn\">Karte als Bild runterladen</Button>\r\n      </Card>\r\n      <Typography variant=\"h2\">\r\n        Challenges\r\n      </Typography>\r\n      <form style={{ display: 'inline-block', marginLeft: '40px' }} noValidate autoComplete=\"off\" onSubmit={console.log}>\r\n        <Autocomplete \r\n          multiple\r\n          value={selectedTags}\r\n          onChange={(ev, val) => setSelectedTags(val)}\r\n          autoSelect={true}\r\n          options={autoCompleteOptions.map(el => el.label)}\r\n          renderInput={params => (\r\n            <TextField style={{ width: '500px'}} variant=\"outlined\" label=\"Suche\" {...params} />\r\n          )} />\r\n      </form>\r\n      <Card>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? 'small' : 'medium'}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order as any, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .filter((row: ChallangeItem, index) => {\r\n                    if (tagsToFilterBy.length === 0) {\r\n                      return true\r\n                    }\r\n  \r\n                    return tagsToFilterBy.every(tag => {\r\n                      const rowValue = row[tag.field]\r\n                      if (Array.isArray(rowValue)) {\r\n                        return rowValue.some(val => val === tag.value)\r\n                      } else {\r\n                        return row[tag.field] === tag.value\r\n                      }\r\n                    })\r\n                  })   \r\n                  .map((row: ChallangeItem, index: number) => {\r\n                    const isItemSelected = isSelected(row.Challenge);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.Challenge)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.Challenge}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            disabled={selected.length === 16 && !isItemSelected}\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\" style={{width: '100% !important'}}>\r\n                          {row.Challenge}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <span>\r\n                            {row.Beschreibung.text}\r\n                          </span>\r\n                          <br/>\r\n                          {!!row.Beschreibung.link ? \r\n                            (<span><strong>Link: </strong><Link href={row.Beschreibung.link}>{row.Beschreibung.link}</Link></span>)\r\n                            : null\r\n                          }\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <Tag onClick={(ev) => addTag(createLevelTag(row.Level), ev)}>{createLevelTag(row.Level).label}</Tag>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.Ziel.map((el, i) => <Tag onClick={(ev) => addTag(createZielTag(el), ev)} key={i}>{createZielTag(el).label}</Tag>)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.Training.map((el, i) => <Tag onClick={(ev) => addTag(createTrainingTag(el), ev)} key={i}>{el}</Tag>)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.Teilnehmer.map((el, i) => <Tag onClick={(ev) => addTag(createTeilnehmerTag(el), ev)} key={i}>{el}</Tag>)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.Ort.map((el, i) => <Tag onClick={(ev) => addTag(createOrtTag(el), ev)} key={i}>{el}</Tag>)}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <Tag onClick={(ev) => addTag(createAltergruppeTag(row.Altersgruppe), ev)}>{createAltergruppeTag(row.Altersgruppe).label}</Tag>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          {row.Tags.map((el, i) => <Tag onClick={(ev) => addTag(createTagsTag(el), ev)} key={i}>{el}</Tag>)}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[25, 50]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n      </Card>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { TableHead, TableRow, TableCell, TableSortLabel } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst headCells = [\r\n  { id: 'Challenge', numeric: false, disablePadding: true, label: 'Challenge', enableSort: true },\r\n  { id: 'Beschreibung', numeric: true, disablePadding: false, label: 'Beschreibung', enableSort: false },\r\n  { id: 'Level', numeric: true, disablePadding: false, label: 'Level', enableSort: true },\r\n  { id: 'Ziel', numeric: true, disablePadding: false, label: 'Ziel', enableSort: true },\r\n  { id: 'Training', numeric: true, disablePadding: false, label: 'Training', enableSort: true },\r\n  { id: 'Teilnehmer', numeric: true, disablePadding: false, label: 'Teilnehmer', enableSort: true },\r\n  { id: 'Ort', numeric: true, disablePadding: false, label: 'Ort', enableSort: true },\r\n  { id: 'Altersgruppe', numeric: true, disablePadding: false, label: 'Alterstufe', enableSort: true },\r\n  { id: 'Tags', numeric: true, disablePadding: false, label: 'Tags', enableSort: true },\r\n];\r\n\r\nexport function EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            { headCell.enableSort ? (\r\n              <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n            ) : (\r\n              <span>{headCell.label}</span>\r\n            )\r\n            }\r\n            \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};"],"sourceRoot":""}