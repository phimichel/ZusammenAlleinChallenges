{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx","services/play-card-picture-service.ts","components/PlayCard.tsx","components/DetailView.tsx","components/EnhancedTable.tsx","components/EnhancedTableHead.tsx","services/item-service.ts","components/SimpleTableHead.tsx","components/SimpleTable.tsx"],"names":["App","className","AppBar","position","Toolbar","Typography","variant","exact","path","DetailView","EnhancedTable","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createPicture","a","playcard","querySelector","rect","getBoundingClientRect","html2canvas","scrollY","y","canvas","Promise","resolve","reject","toBlob","blob","PlayCardPictureService","downloadPicture","saveAs","PlayCard","items","displayItems","length","array","count","i","push","fillArray","id","map","item","key","selected","Buffer","toString","split","getSelection","useParams","Challenge","onClick","rows","ItemService","getAll","descendingComparator","b","orderBy","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","top","classes","React","useState","order","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","history","useHistory","createLink","idx","findIndex","it","Challange","join","copyLink","setCopyLink","absoluteCopyLink","setAbsoluteCopyLink","whatsappLink","setWhatsappLink","useEffect","currentLoc","href","slice","createAbsoluteLink","encodeURI","emptyRows","Math","min","InputProps","readOnly","defaultValue","value","e","clipboard","writeText","aria-labelledby","size","aria-label","numSelected","onSelectAllClick","event","target","checked","newSelecteds","n","onRequestSort","property","rowCount","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","inputProps","component","scope","align","Beschreibung","text","Level","Ziel","Training","Teilnehmer","Ort","Altersgruppe","Tags","style","colSpan","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","control","onChange","label","headCells","numeric","disablePadding","EnhancedTableHead","props","headCell","sortDirection","active","direction","isChecked","input","createOrtField","inddoor","outdoor","ort","indoor","createTeilnehmerField","Anzahl_alleine","Anzahl_zwei","Anzahl_team","teilnehmer","alleine","zwei","Team","convert","Mindestalter","Anleitungslink","Object","entries","filter","entry","startsWith","createZielField","createTrainingField","link","trim","getByIndex","convertedItem","getByIndeces","indeces","SimpleTableHead","TableHead","TableRow","TableCell","TableSortLabel","SimpleTable","log","description","TableContainer","Table","TableBody","rel"],"mappings":"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","file":"static/js/main.281a2f54.chunk.js","sourcesContent":["import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react'\nimport DetailView from \"./components/DetailView\"\nimport EnhancedTable from \"./components/EnhancedTable\"\nimport { AppBar, Toolbar, Typography, } from '@material-ui/core';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              ZusammenAlleinImVerein\n        </Typography>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path=\"/view/:id\">\n            <DetailView />\n          </Route>\n          <Route path=\"/\" exact>\n            <EnhancedTable />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import html2canvas from 'html2canvas'\nimport { saveAs } from 'file-saver'\n\nconst createPicture = async (): Promise<Blob> => {\n  const playcard = document.querySelector('#play-card') as HTMLElement\n  const rect = playcard.getBoundingClientRect()\n\n  const canvas = await html2canvas(playcard, { scrollY: rect.y })\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (!blob) {\n        reject('Blob creation failed')\n      }\n\n      resolve(blob!)\n    });\n  })\n}\nconst downloadPicture = async () => {\n  const blob = await createPicture()\n\n  saveAs(blob, 'playcard.png')\n}\n\nexport const PlayCardPictureService = {\n  downloadPicture\n}","import React from 'react'\n\nimport './PlayCard.scss'\n\ninterface PlayCardProps {\n  items?: string[]\n}\n\nconst fillArray = (array: string[], count: number = 16) => {\n  for (let i = array.length; i < count; i++) {\n    array.push('')\n  }\n\n  return array\n}\n\nexport const PlayCard: React.FC<PlayCardProps> = ({ items = []}) => {\n  const displayItems = [...items]\n  if (displayItems.length < 16) {\n    fillArray(displayItems)\n  }\n\n  return (\n    <div className=\"play-card\" id=\"play-card\">\n      {displayItems.map((item, i) => (\n        <div key={i} className=\"play-card__item\">\n          <span className=\"play-card__item-text\">{item}</span>\n        </div>    \n      ))}\n    </div>\n  )\n}","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport items from '../items.json';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { PlayCard } from './PlayCard';\nimport { SimpleTable } from './SimpleTable';\n\nimport './DetailView.scss'\n\nexport default function DetailView() {\n  let { id } = useParams();\n  const selected = getSelection(id)\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  function getSelection(id) {\n    /* truncate first the numbers */\n    var indexes = new Buffer(id, 'base64').toString('ascii').split(\",\", 25)\n    /* filter items */\n    const elems = indexes.map(i => items[i])\n    return elems\n  }\n\n  return (\n    <div className=\"root\">\n      <div className=\"rules\">\n        <h2>Regeln:</h2>\n        <ul>\n          <li>In welcher Reihenfolge du die Challenges erledigst ist dir überlassen</li>\n          <li>Jede Challenge wird genau einmal gewertet, du warst sie aber natürlich so oft du willst absolvieren</li>\n          <li>Pro Tag darfst du eine Challenge einreichen</li>\n          <li>Als Challengebeweis postest du ein Foto, Video oder Screenshot (z.b. absolvierte Strecke in Running App). Wenn du bescheißt, dann nur dich selbst.</li>\n          <li>Hast du eine Challenge absolviert, kannst du sie wegstreichen, du selbst behältst den Überblick.</li>\n          <li>Wenn du alle Challenges geschafft hast, beweis es mit einer Fotocollage und freu dich - Du hast dich Fit gehalten!</li>\n        </ul>\n      </div>\n      <PlayCard items={selected.map(item => item.Challenge)} />\n      <SimpleTable items={selected} />\n\n      <div className=\"buttonBar\">\n        <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n      </div>\n    </div>\n  );\n}","import { Button, TextField } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport React, { useEffect } from 'react';\nimport { EnhancedTableHead } from './EnhancedTableHead';\nimport { PlayCard } from './PlayCard';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { useHistory } from \"react-router-dom\";\nimport { ItemService, ChallangeItem } from '../services/item-service';\n\nconst rows = ItemService.getAll()\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([] as string[]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const history = useHistory();\n\n  const createWhatsAppLink = (): string => {\n    const text = \"Hier ist deine neue Bingokarte: \"\n    return \"whatsapp://send?text=\" + encodeURI(text + absoluteCopyLink)\n  }\n  const createAbsoluteLink = (): string => {\n    const currentLoc = window.location.href;\n    return currentLoc.slice(0, currentLoc.length - 1) + copyLink;\n  }\n  const createLink = (): string => {\n    return '/view/' + new Buffer(selected.map((i, idx) => rows.findIndex(it => it.Challange === i)).join(',')).toString('base64')\n  }\n  const navigateToLink = () => {\n    history.push(createLink())\n  }\n\n  const [copyLink, setCopyLink] = React.useState('');\n  const [absoluteCopyLink, setAbsoluteCopyLink] = React.useState('');\n  const [whatsappLink, setWhatsappLink] = React.useState('');\n\n  useEffect(() => {\n    setCopyLink(createLink())\n  }, [selected])\n\n  useEffect(() => {\n    setAbsoluteCopyLink(createAbsoluteLink())\n  }, [copyLink])\n\n  useEffect(() => {\n    setWhatsappLink(createWhatsAppLink())\n  }, [absoluteCopyLink])\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.Challange);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [] as string[];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const copyToClipboard = e => {\n    navigator.clipboard.writeText(absoluteCopyLink);\n  }\n\n  return (\n    <div className={classes.root}>\n      <PlayCard items={selected} />\n      <div>\n        <TextField id=\"copy-link\" InputProps={{\n          readOnly: true,\n        }} defaultValue={absoluteCopyLink} value={absoluteCopyLink} />\n        <Button variant=\"contained\" onClick={copyToClipboard}>Copy</Button>\n      </div>\n      <div>\n        <Button variant=\"contained\" onClick={navigateToLink}>Gehe zu Seite</Button>\n      </div>\n      <div className=\"button-whatsapp\">\n        <a href={whatsappLink}>In Whatsapp teilen</a>\n      </div>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order as any, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: ChallangeItem, index: number) => {\n                  const isItemSelected = isSelected(row.Challange);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.Challange)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.Challange}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.Challange}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.Beschreibung.text}</TableCell>\n                      <TableCell align=\"right\">{row.Level}</TableCell>\n                      <TableCell align=\"right\">{row.Ziel}</TableCell>\n                      <TableCell align=\"right\">{row.Training}</TableCell>\n                      <TableCell align=\"right\">{row.Teilnehmer}</TableCell>\n                      <TableCell align=\"right\">{row.Ort}</TableCell>\n                      <TableCell align=\"right\">{row.Altersgruppe}</TableCell>\n                      <TableCell align=\"right\">{row.Tags}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n    </div>\n  );\n}","import React from \"react\";\nimport { TableHead, TableRow, TableCell, Checkbox, TableSortLabel } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nconst headCells = [\n  { id: 'Challenge', numeric: false, disablePadding: true, label: 'Challenge' },\n  { id: 'Beschreibung', numeric: true, disablePadding: false, label: 'Beschreibung' },\n  { id: 'Level', numeric: true, disablePadding: false, label: 'Level' },\n  { id: 'Ziel', numeric: true, disablePadding: false, label: 'Ziel' },\n  { id: 'Training', numeric: true, disablePadding: false, label: 'Training' },\n  { id: 'Teilnehmer', numeric: true, disablePadding: false, label: 'Teilnehmer' },\n  { id: 'Ort', numeric: true, disablePadding: false, label: 'Ort' },\n  { id: 'Altersgruppe', numeric: true, disablePadding: false, label: 'Alterstufe' },\n  { id: 'Tags', numeric: true, disablePadding: false, label: 'Tags' },\n];\n\nexport function EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};","import items from '../items.json'\n\ntype JSONItem = typeof items[0]\n\nenum Ziel {\n  Spass = 'Spass',\n  Socialising = 'Socialising',\n  Training = 'Training',\n}\n\nenum Training {\n  Kraft = 'Kraft',\n  Ausdauer = 'Ausdauer',\n  Geschick = 'Geschick',\n  Schnelligkeit = 'Schnelligkeit',\n}\n\nenum Teilnehmer {\n  alleine = 'alleine',\n  zwei = 'zwei',\n  Team = 'Team',\n}\n\nenum Ort {\n  indoor = 'indoor',\n  outdoor = 'outdoor',\n}\n\nexport interface ChallangeItem {\n  Challange: string\n  Beschreibung: {\n    text: string\n    link: string\n  }\n  Level: number\n  Ziel: Ziel[]\n  Training: Training[]\n  Teilnehmer: Teilnehmer[]\n  Ort: Ort[]\n  Altersgruppe: number\n  Tags: string[]\n}\n\nconst isChecked = (input: string): boolean => {\n  return input === 'x'\n}\n\nconst createOrtField = (item: JSONItem): Ort[] => {\n  const { inddoor, outdoor } = item\n\n  const ort = [] as Ort[]\n\n  if (isChecked(inddoor)) {\n    ort.push(Ort.indoor)\n  }\n\n  if (isChecked(outdoor)) {\n    ort.push(Ort.outdoor)\n  }\n\n  return ort\n}\n\nconst createZielField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Ziel_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Ziel[]\n}\n\nconst createTrainingField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Effekt_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Training[]\n}\n\nconst createTeilnehmerField = (item: JSONItem): Teilnehmer[] => {\n  const { Anzahl_alleine, Anzahl_zwei, Anzahl_team } = item\n\n  const teilnehmer = [] as Teilnehmer[]\n  if (isChecked(Anzahl_alleine)) {\n    teilnehmer.push(Teilnehmer.alleine)\n  }\n  if (isChecked(Anzahl_zwei)) {\n    teilnehmer.push(Teilnehmer.zwei)\n  }\n  if (isChecked(Anzahl_team)) {\n    teilnehmer.push(Teilnehmer.Team)\n  }\n\n  return teilnehmer\n}\n\n\nconst convert = (item: JSONItem): ChallangeItem => {\n  const {\n    Challenge,\n    Beschreibung,\n    Mindestalter,\n    Anleitungslink,\n    Tags\n  } = item\n\n  const Ort = createOrtField(item)\n  const Teilnehmer = createTeilnehmerField(item)\n  const Ziel = createZielField(item)\n  const Training = createTrainingField(item)\n\n  return {\n    Challange: Challenge,\n    Beschreibung: {\n      text: Beschreibung,\n      link: Anleitungslink\n    },\n    Altersgruppe: Mindestalter,\n    Level: 1,\n    Tags: Tags.split(',').map(item => item.trim()),\n    Ort,\n    Teilnehmer,\n    Ziel,\n    Training\n  }\n}\n\nconst getAll = () => {\n  return items.map(convert)\n}\n\nconst getByIndex = (index: number) => {\n  const item = items[index]\n\n  let convertedItem: ChallangeItem | null = null\n  if (!item) {\n    convertedItem = convert(item)\n  }\n\n  return convertedItem\n}\n\nconst getByIndeces = (indeces: number[]): ChallangeItem[] => {\n  return indeces.map(getByIndex).filter(item => !!item) as ChallangeItem[]\n}\n\nexport const ItemService = {\n  getAll,\n  getByIndex,\n  getByIndeces\n}","import React from \"react\";\nimport { TableHead, TableRow, TableCell, TableSortLabel } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nimport './SimpleTable.scss'\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'description', numeric: false, disablePadding: false, label: 'Beschreibung' },\n  { id: 'link', numeric: false, disablePadding: false, label: 'Anleitungslink' },\n];\n\nexport function SimpleTableHead(props) {\n  const { order, orderBy, rowCount } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className=\"visuallyHidden\">\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nSimpleTableHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number.isRequired,\n};","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport React from 'react';\nimport { SimpleTableHead } from './SimpleTableHead';\n\nimport './SimpleTable.scss'\n\ninterface SimpleTableProps {\n    items?: any[]\n}\n\nexport const SimpleTable: React.FC<SimpleTableProps> = ({ items = [] }) => {\n    const displayItems = [...items];\n    const page = 1;\n    const rowsPerPage = 25;\n    const [dense] = React.useState(false);\n\n    const rows = createRows()\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    function createData(name: string, description: string, link: string) {\n        return { name, description, link };\n    }\n\n    function createRows() {\n        console.log(displayItems)\n        return displayItems.map(item => createData(item.Challenge, item.Beschreibung, item.Anleitungslink));\n    }\n\n    return (\n        <div className=\"simple-table\">\n            <TableContainer>\n                <Table\n                    className=\"table\"\n                    aria-labelledby=\"tableTitle\"\n                    size={dense ? 'small' : 'medium'}\n                    aria-label=\"enhanced table\"\n                >\n                    <SimpleTableHead\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {rows\n                            .map((row, index) => {\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        tabIndex={-1}\n                                        key={index}\n                                    >\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.description}</TableCell>\n                                        <TableCell align=\"right\">{row.link && \n                                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={row.link}>Anleitung</a>}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}"],"sourceRoot":""}