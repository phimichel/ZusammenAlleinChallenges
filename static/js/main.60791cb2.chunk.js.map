{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx","services/autocomplete-service.ts","components/Tag.tsx","services/play-card-picture-service.ts","components/PlayCard.tsx","services/item-service.ts","components/DetailView.tsx","components/SimpleTable.tsx","components/EnhancedTable.tsx","components/EnhancedTableHead.tsx"],"names":["App","className","AppBar","position","Toolbar","Typography","variant","exact","path","DetailView","EnhancedTable","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createLevelTag","value","field","label","createLevelTags","item","Level","createZielTag","createZielTags","Ziel","map","createTrainingTag","createTrainingTags","Training","createTeilnehmerTag","createTeilnehmerTags","Teilnehmer","createOrtTag","createOrtTags","Ort","createAltergruppeTag","createAltersgruppeTags","Altersgruppe","createTagsTags","Tags","el","AutocompleteService","createAutocompleteOptions","allItems","ItemService","getAll","creators","optionsMap","tags","creator","tag","Object","values","Tag","props","onClick","children","createPicture","a","playcard","querySelector","rect","getBoundingClientRect","html2canvas","scrollY","y","canvas","Promise","resolve","reject","toBlob","blob","PlayCardPictureService","downloadPicture","saveAs","PlayCard","items","displayItems","length","array","count","i","push","fillArray","id","key","isChecked","input","createOrtField","inddoor","outdoor","ort","indoor","createTeilnehmerField","Anzahl_alleine","Anzahl_zwei","Anzahl_team","teilnehmer","alleine","zwei","Team","convert","Challenge","Beschreibung","Mindestalter","Anleitungslink","entries","filter","entry","startsWith","split","createZielField","createTrainingField","Challange","text","link","trim","getByIndex","index","convertedItem","getByIndeces","indeces","selected","Buffer","toString","getSelection","useParams","SimpleTable","target","rel","href","rows","autoCompleteOptions","descendingComparator","b","orderBy","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","top","classes","React","useState","selectedTags","setSelectedTags","order","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","history","useHistory","createLink","idx","findIndex","it","join","copyLink","setCopyLink","absoluteCopyLink","setAbsoluteCopyLink","whatsappLink","setWhatsappLink","useEffect","currentLoc","slice","createAbsoluteLink","encodeURI","addTag","ev","stopPropagation","emptyRows","Math","min","tagsToFilterBy","option","includes","InputProps","readOnly","e","clipboard","writeText","style","display","noValidate","autoComplete","onSubmit","log","multiple","onChange","val","autoSelect","options","renderInput","params","aria-labelledby","size","aria-label","numSelected","onSelectAllClick","event","checked","newSelecteds","n","onRequestSort","property","rowCount","comparator","stabilizedThis","sort","stableSort","getComparator","row","every","rowValue","Array","isArray","some","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","inputProps","component","scope","align","colSpan","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","control","headCells","numeric","disablePadding","EnhancedTableHead","headCell","sortDirection","active","direction"],"mappings":"oXA+BeA,EAzBH,WACV,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,4BAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAChB,kBAACC,EAAA,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,IAAID,OAAK,GACnB,kBAACG,EAAA,EAAD,WCVQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kSEtIfC,EAAiB,SAACC,GAAD,MAAY,CACxCC,MAAO,QACPD,MAAOA,EACPE,MAAM,SAAD,OAAWF,KAGZG,EAA8B,SAACC,GACnC,MAAO,CAACL,EAAeK,EAAKC,SAGjBC,EAAgB,SAACN,GAAD,MAAY,CACvCC,MAAO,OACPD,MAAOA,EACPE,MAAOF,IAGHO,EAA6B,SAACH,GAClC,OAAOA,EAAKI,KAAKC,IAAIH,IAGVI,EAAoB,SAACV,GAAD,MAAY,CAC3CC,MAAO,WACPD,MAAOA,EACPE,MAAOF,IAGHW,EAAiC,SAACP,GACtC,OAAOA,EAAKQ,SAASH,IAAIC,IAGdG,EAAsB,SAACb,GAAD,MAAY,CAC7CC,MAAO,aACPD,MAAOA,EACPE,MAAOF,IAGHc,EAAmC,SAACV,GACxC,OAAOA,EAAKW,WAAWN,IAAII,IAGhBG,EAAe,SAAChB,GAAD,MAAY,CACtCC,MAAO,MACPD,MAAOA,EACPE,MAAOF,IAGHiB,EAA4B,SAACb,GACjC,OAAOA,EAAKc,IAAIT,IAAIO,IAGTG,EAAuB,SAACnB,GAAD,MAAY,CAC9CC,MAAO,eACPD,MAAOA,EACPE,MAAM,MAAD,OAAQF,EAAR,aAGDoB,EAAqC,SAAChB,GAC1C,MAAO,CAACe,EAAqBf,EAAKiB,gBAG9BC,EAA6B,SAAClB,GAClC,OAAOA,EAAKmB,KAAKd,KAAI,SAAAe,GAAE,MAAK,CAC1BvB,MAAO,OACPD,MAAOwB,EACPtB,MAAOsB,OAgCEC,EAAsB,CACjCC,0BA7BgC,WAChC,IADmD,EAC7CC,EAAWC,IAAYC,SAEvBC,EAAW,CACf3B,EACAI,EACAI,EACAG,EACAG,EACAG,EACAE,GAIIS,EAAa,GAdgC,cAehCJ,GAfgC,IAenD,2BAA6B,CAAC,IAAD,EAAlBvB,EAAkB,sBACL0B,GADK,IAC3B,2BAAgC,CAAC,IAAD,EACxBE,GAAOC,EADiB,SACT7B,GADS,cAGZ4B,GAHY,IAG9B,2BAAwB,CAAC,IAAdE,EAAa,QACtBH,EAAWG,EAAIhC,OAASgC,GAJI,gCADL,gCAfsB,8BAyBnD,OAAOC,OAAOC,OAAOL,M,gCCxGvB,sDAOaM,GAPb,OAOuC,SAACC,GACtC,OACE,0BAAMrE,UAAU,MAAMsE,QAASD,EAAMC,SAAUD,EAAME,a,0rhBCNnDC,EAAa,uCAAG,gCAAAC,EAAA,6DACdC,EAAWxD,SAASyD,cAAc,cAClCC,EAAOF,EAASG,wBAFF,SAICC,IAAYJ,EAAU,CAAEK,QAASH,EAAKI,IAJvC,cAIdC,EAJc,yBAMb,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAAOI,QAAO,SAACC,GACRA,GACHF,EAAO,wBAGTD,EAAQG,UAZQ,2CAAH,qDAsBNC,EAAyB,CACpCC,gBAPmB,uCAAG,4BAAAf,EAAA,sEACHD,IADG,OAChBc,EADgB,OAGtBG,iBAAOH,EAAM,gBAHS,2CAAH,uD,8FCHRI,G,OAAoC,SAAC,GAAmB,IAAD,IAAhBC,aAAgB,MAAR,GAAQ,EAC5DC,EAAY,YAAOD,GAKzB,OAJIC,EAAaC,OAAS,IAVV,SAACC,GACjB,IAD0D,IAAxBC,EAAuB,uDAAP,GACzCC,EAAIF,EAAMD,OAAQG,EAAID,EAAOC,IACpCF,EAAMG,KAAK,IASXC,CAAUN,GAIV,yBAAK5F,UAAU,YAAYmG,GAAG,aAC3BP,EAAapD,KAAI,SAACL,EAAM6D,GAAP,OAChB,yBAAKI,IAAKJ,EAAGhG,UAAU,mBACrB,0BAAMA,UAAU,wBAAwBmC,W,gCC1BlD,sCAIKI,EAMAI,EAOAG,EAMAG,EAvBL,S,SAIKV,K,cAAAA,E,0BAAAA,E,qBAAAA,M,cAMAI,K,cAAAA,E,oBAAAA,E,oBAAAA,E,+BAAAA,M,cAOAG,K,kBAAAA,E,YAAAA,E,aAAAA,M,cAMAG,K,gBAAAA,E,mBAAAA,M,KAoBL,IAAMoD,EAAY,SAACC,GACjB,MAAiB,MAAVA,GAGHC,EAAiB,SAACpE,GAA2B,IACzCqE,EAAqBrE,EAArBqE,QAASC,EAAYtE,EAAZsE,QAEXC,EAAM,GAUZ,OARIL,EAAUG,IACZE,EAAIT,KAAKhD,EAAI0D,QAGXN,EAAUI,IACZC,EAAIT,KAAKhD,EAAIwD,SAGRC,GAiBHE,EAAwB,SAACzE,GAAkC,IACvD0E,EAA6C1E,EAA7C0E,eAAgBC,EAA6B3E,EAA7B2E,YAAaC,EAAgB5E,EAAhB4E,YAE/BC,EAAa,GAWnB,OAVIX,EAAUQ,IACZG,EAAWf,KAAKnD,EAAWmE,SAEzBZ,EAAUS,IACZE,EAAWf,KAAKnD,EAAWoE,MAEzBb,EAAUU,IACZC,EAAWf,KAAKnD,EAAWqE,MAGtBH,GAIHI,EAAU,SAACjF,GAAmC,IAEhDkF,EAKElF,EALFkF,UACAC,EAIEnF,EAJFmF,aACAC,EAGEpF,EAHFoF,aACAC,EAEErF,EAFFqF,eACAlE,EACEnB,EADFmB,KAGIL,EAAMsD,EAAepE,GACrBW,EAAa8D,EAAsBzE,GACnCI,EA3CgB,SAACJ,GACvB,OAAO+B,OAAOuD,QAAQtF,GACnBuF,QAAO,SAAAC,GAAK,OAAIA,EAAM,GAAGC,WAAW,YACpCF,QAAO,SAAAC,GAAK,OAAItB,EAAUsB,EAAM,OAChCnF,KAAI,SAAAmF,GAAK,OAAIA,EAAM,GAAGE,MAAM,KAAK,MAuCvBC,CAAgB3F,GACvBQ,EArCoB,SAACR,GAC3B,OAAO+B,OAAOuD,QAAQtF,GACnBuF,QAAO,SAAAC,GAAK,OAAIA,EAAM,GAAGC,WAAW,cACpCF,QAAO,SAAAC,GAAK,OAAItB,EAAUsB,EAAM,OAChCnF,KAAI,SAAAmF,GAAK,OAAIA,EAAM,GAAGE,MAAM,KAAK,MAiCnBE,CAAoB5F,GAErC,MAAO,CACL6F,UAAWX,EACXC,aAAc,CACZW,KAAMX,EACNY,KAAMV,GAERpE,aAAcmE,EACdnF,MAAO,EACPkB,KAAMA,EAAKuE,MAAM,KAAKrF,KAAI,SAAAL,GAAI,OAAIA,EAAKgG,UAAQT,QAAO,SAAAvF,GAAI,QAAMA,KAChEc,MACAH,aACAP,OACAI,aAQEyF,EAAa,SAACC,GAClB,IAAMlG,EAAOwD,EAAM0C,GAEfC,EAAsC,KAK1C,OAJKnG,IACHmG,EAAgBlB,EAAQjF,IAGnBmG,GAOI3E,EAAc,CACzBC,OApBa,WACb,OAAO+B,EAAMnD,IAAI4E,IAoBjBgB,aACAG,aAPmB,SAACC,GACpB,OAAOA,EAAQhG,IAAI4F,GAAYV,QAAO,SAAAvF,GAAI,QAAMA,Q,iCC7IlD,yHAUe,SAAS3B,IAAc,IAE9BiI,EAMN,SAAsBtC,GAKpB,OAHc,IAAIuC,EAAOvC,EAAI,UAAUwC,SAAS,SAASd,MAAM,IAAK,IAE9CrF,KAAI,SAAAwD,GAAC,OAAIL,EAAMK,MAVtB4C,CADJC,cAAP1C,IAeN,OACE,yBAAKnG,UAAU,QACb,yBAAKA,UAAU,SACb,uCACA,4BACE,wGACA,sIACA,2EACA,qLACA,sIACA,oJAGJ,kBAAC,IAAD,CAAU2F,MAAO8C,EAASjG,KAAI,SAAAL,GAAI,OAAIA,EAAKkF,eAC3C,kBAAC,IAAD,CAAa1B,MAAO8C,IAEpB,yBAAKzI,UAAU,aACb,kBAAC,IAAD,CAAQK,QAAQ,YAAYiE,QA7BZ,WACpBiB,IAAuBC,oBA4BnB,0B,wIC7BKsD,EAA0C,SAAC,GAAoB,IAAD,IAAjBnD,aAAiB,MAAT,GAAS,EACjEC,EAAY,YAAOD,GACzB,OACI,yBAAK3F,UAAU,gBACN4F,EAAapD,KAAI,SAACL,EAAWkG,GAC1B,OACI,kBAAC,IAAD,CAAOhI,QAAQ,YACX,6BAAM8B,EAAK6F,WACX,6BAAM7F,EAAKmF,cACX,6BAAMnF,EAAKqF,gBAAkB,uBAAGuB,OAAO,SAASC,IAAI,sBAAsBC,KAAM9G,EAAKqF,gBAAxD,qB,oSCDnD0B,EAAOvF,IAAYC,SACnBuF,EAAsB3F,IAAoBC,4BAEhD,SAAS2F,EAAqB3E,EAAQ4E,EAAQC,GAC5C,OAAID,EAAEC,GAAW7E,EAAE6E,IACT,EAEND,EAAEC,GAAW7E,EAAE6E,GACV,EAEF,EAmBT,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,OACPE,aAAcJ,EAAMK,QAAQ,IAE9BC,MAAO,CACLC,SAAU,KAEZC,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACRC,QAAS,EACTC,SAAU,SACVC,QAAS,EACTrK,SAAU,WACVsK,IAAK,GACLb,MAAO,OAII,SAASlJ,IACtB,IAAMgK,EAAUlB,IADsB,EAEEmB,IAAMC,SAAS,IAFjB,mBAE/BC,EAF+B,KAEjBC,EAFiB,OAGZH,IAAMC,SAAS,OAHH,mBAG/BG,EAH+B,KAGxBC,EAHwB,OAIRL,IAAMC,SAAS,YAJP,mBAI/BrB,EAJ+B,KAItB0B,EAJsB,OAKNN,IAAMC,SAAS,IALT,mBAK/BlC,EAL+B,KAKrBwC,EALqB,OAMdP,IAAMC,SAAS,GAND,mBAM/BO,EAN+B,KAMzBC,EANyB,OAOZT,IAAMC,UAAS,GAPH,mBAO/BS,EAP+B,KAOxBC,EAPwB,OAQAX,IAAMC,SAAS,IARf,oBAQ/BW,GAR+B,MAQlBC,GARkB,MAShCC,GAAUC,cAUVC,GAAa,WACjB,MAAO,SAAW,IAAIhD,EAAOD,EAASjG,KAAI,SAACwD,EAAG2F,GAAJ,OAAYzC,EAAK0C,WAAU,SAAAC,GAAE,OAAIA,EAAG7D,YAAchC,QAAI8F,KAAK,MAAMnD,SAAS,WApBhF,GA0BN+B,IAAMC,SAAS,IA1BT,qBA0B/BoB,GA1B+B,MA0BrBC,GA1BqB,SA2BUtB,IAAMC,SAAS,IA3BzB,qBA2B/BsB,GA3B+B,MA2BbC,GA3Ba,SA4BExB,IAAMC,SAAS,IA5BjB,qBA4B/BwB,GA5B+B,MA4BjBC,GA5BiB,MA8BtCC,qBAAU,WACRL,GAAYN,QACX,CAACjD,IAEJ4D,qBAAU,WACRH,GApByB,WACzB,IAAMI,EAAa3L,OAAOC,SAASqI,KACnC,OAAOqD,EAAWC,MAAM,EAAGD,EAAWzG,OAAS,GAAKkG,GAkBhCS,MACnB,CAACT,KAEJM,qBAAU,WACRD,GA1BO,wBAA0BK,UADpB,mCACqCR,OA2BjD,CAACA,KAGJ,IAoDMS,GAAS,SAACzI,EAAgB0I,GAC9BA,EAAGC,kBACH/B,EAAgB,GAAD,mBAAKD,GAAL,CAAmB3G,EAAIhC,UAKlC4K,GAAYvB,GAAcwB,KAAKC,IAAIzB,GAAapC,EAAKrD,OAASqF,EAAOI,IAMrE0B,GAAiB7D,EAAoBzB,QAAO,SAAAuF,GAAM,OAAIrC,EAAasC,SAASD,EAAOhL,UAEzF,OACE,yBAAKjC,UAAWyK,EAAQf,MACtB,kBAAC,IAAD,CAAU/D,MAAO8C,IACjB,6BACE,kBAAC,IAAD,CAAWtC,GAAG,YAAYgH,WAAY,CACpCC,UAAU,GACTrL,MAAOkK,KACV,kBAAC,IAAD,CAAQ5L,QAAQ,YAAYiE,QAbV,SAAA+I,GACtBjM,UAAUkM,UAAUC,UAAUtB,MAY1B,SAEF,6BACE,kBAAC,IAAD,CAAQ5L,QAAQ,YAAYiE,QAlGX,WACrBkH,GAAQvF,KAAKyF,QAiGT,kBAEF,yBAAK1L,UAAU,mBACb,uBAAGiJ,KAAMkD,IAAT,uBAEF,kBAAC,IAAD,CAAOnM,UAAWyK,EAAQb,OACxB,0BAAM4D,MAAO,CAAEC,QAAS,gBAAkBC,YAAU,EAACC,aAAa,MAAMC,SAAUhM,QAAQiM,KACxF,kBAAC,IAAD,CACEC,UAAQ,EACR/L,MAAO6I,EACPmD,SAAU,SAACpB,EAAIqB,GAAL,OAAanD,EAAgBmD,IACvCC,YAAY,EACZC,QAAS/E,EAAoB3G,KAAI,SAAAe,GAAE,OAAIA,EAAGtB,SAC1CkM,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,eAAWZ,MAAO,CAAE7D,MAAO,SAAUtJ,QAAQ,WAAW4B,MAAM,SAAYmM,QAGhF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpO,UAAWyK,EAAQV,MACnBsE,kBAAgB,aAChBC,KAAMlD,EAAQ,QAAU,SACxBmD,aAAW,kBAEX,kBAAC,IAAD,CACE9D,QAASA,EACT+D,YAAa/F,EAAS5C,OACtBiF,MAAOA,EACPxB,QAASA,EACTmF,iBApGiB,SAACC,GAC5B,GAAIA,EAAM3F,OAAO4F,QAAjB,CACE,IAAMC,EAAe1F,EAAK1G,KAAI,SAACqM,GAAD,OAAOA,EAAE7G,aACvCiD,EAAY2D,QAGd3D,EAAY,KA+FF6D,cA3Gc,SAACJ,EAAOK,GAEhChE,EADczB,IAAYyF,GAAsB,QAAVjE,EACrB,OAAS,OAC1BE,EAAW+D,IAyGDC,SAAU9F,EAAKrD,SAEjB,kBAAC,IAAD,KA3LZ,SAAoBC,EAAcmJ,GAChC,IAAMC,EAAiBpJ,EAAMtD,KAAI,SAACe,EAAI8E,GAAL,MAAe,CAAC9E,EAAI8E,MAMrD,OALA6G,EAAeC,MAAK,SAAC1K,EAAG4E,GACtB,IAAMyB,EAAQmE,EAAWxK,EAAE,GAAI4E,EAAE,IACjC,OAAc,IAAVyB,EAAoBA,EACjBrG,EAAE,GAAK4E,EAAE,MAEX6F,EAAe1M,KAAI,SAACe,GAAD,OAAQA,EAAG,MAqLxB6L,CAAWlG,EAlM1B,SAAuB4B,EAAuBxB,GAC5C,MAAiB,SAAVwB,EACH,SAACrG,EAAQ4E,GAAT,OAAoBD,EAAqB3E,EAAG4E,EAAGC,IAC/C,SAAC7E,EAAQ4E,GAAT,OAAqBD,EAAqB3E,EAAG4E,EAAGC,IA+LtB+F,CAAcvE,EAAcxB,IAC3CiD,MAAMrB,EAAOI,GAAaJ,EAAOI,GAAcA,IAC/C5D,QAAO,SAAC4H,EAAoBjH,GAC3B,OAA8B,IAA1B2E,GAAenH,QAIZmH,GAAeuC,OAAM,SAAAtL,GAC1B,IAAMuL,EAAWF,EAAIrL,EAAIjC,OACzB,OAAIyN,MAAMC,QAAQF,GACTA,EAASG,MAAK,SAAA3B,GAAG,OAAIA,IAAQ/J,EAAIlC,SAEjCuN,EAAIrL,EAAIjC,SAAWiC,EAAIlC,YAInCS,KAAI,SAAC8M,EAAoBjH,GACxB,IAvEIuH,EAuEEC,GAvEFD,EAuE8BN,EAAItH,WAvEG,IAA5BS,EAASqH,QAAQF,IAwExBG,EAAO,kCAA8B1H,GAE3C,OACE,kBAAC,IAAD,CACE2H,OAAK,EACL1L,QAAS,SAACoK,GAAD,OAvHT,SAACA,EAAOkB,GAC1B,IAAMK,EAAgBxH,EAASqH,QAAQF,GACnCM,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAO1H,EAAUmH,GAChB,IAAlBK,EACTC,EAAcA,EAAYC,OAAO1H,EAAS8D,MAAM,IACvC0D,IAAkBxH,EAAS5C,OAAS,EAC7CqK,EAAcA,EAAYC,OAAO1H,EAAS8D,MAAM,GAAI,IAC3C0D,EAAgB,IACzBC,EAAcA,EAAYC,OACxB1H,EAAS8D,MAAM,EAAG0D,GAClBxH,EAAS8D,MAAM0D,EAAgB,KAInChF,EAAYiF,GAsG0BE,CAAY1B,EAAOY,EAAItH,YAC3CqI,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXnK,IAAKkJ,EAAItH,UACTS,SAAUoH,GAEV,kBAAC,IAAD,CAAWtF,QAAQ,YACjB,kBAAC,IAAD,CACEoE,QAASkB,EACTW,WAAY,CAAE,kBAAmBT,MAGrC,kBAAC,IAAD,CAAWU,UAAU,KAAKtK,GAAI4J,EAASW,MAAM,MAAMnG,QAAQ,QACxD+E,EAAItH,WAEP,kBAAC,IAAD,CAAW2I,MAAM,SACf,8BACGrB,EAAIhI,aAAaW,MAEpB,6BACGqH,EAAIhI,aAAaY,KACjB,8BAAM,0CAAuB,uBAAGe,KAAMqG,EAAIhI,aAAaY,MAAOoH,EAAIhI,aAAaY,OAC9E,MAGN,kBAAC,IAAD,CAAWyI,MAAM,SACf,kBAAC,IAAD,CAAKrM,QAAS,SAACqI,GAAD,OAAQD,GAAO5K,YAAewN,EAAIlN,OAAQuK,KAAM7K,YAAewN,EAAIlN,OAAOH,QAE1F,kBAAC,IAAD,CAAW0O,MAAM,SACdrB,EAAI/M,KAAKC,KAAI,SAACe,EAAIyC,GAAL,OAAW,kBAAC,IAAD,CAAK1B,QAAS,SAACqI,GAAD,OAAQD,GAAOrK,YAAckB,GAAKoJ,IAAKvG,IAAKJ,GAAI3D,YAAckB,GAAItB,WAE3G,kBAAC,IAAD,CAAW0O,MAAM,SACdrB,EAAI3M,SAASH,KAAI,SAACe,EAAIyC,GAAL,OAAW,kBAAC,IAAD,CAAK1B,QAAS,SAACqI,GAAD,OAAQD,GAAOjK,YAAkBc,GAAKoJ,IAAKvG,IAAKJ,GAAIzC,OAEjG,kBAAC,IAAD,CAAWoN,MAAM,SACdrB,EAAIxM,WAAWN,KAAI,SAACe,EAAIyC,GAAL,OAAW,kBAAC,IAAD,CAAK1B,QAAS,SAACqI,GAAD,OAAQD,GAAO9J,YAAoBW,GAAKoJ,IAAKvG,IAAKJ,GAAIzC,OAErG,kBAAC,IAAD,CAAWoN,MAAM,SACdrB,EAAIrM,IAAIT,KAAI,SAACe,EAAIyC,GAAL,OAAW,kBAAC,IAAD,CAAK1B,QAAS,SAACqI,GAAD,OAAQD,GAAO3J,YAAaQ,GAAKoJ,IAAKvG,IAAKJ,GAAIzC,OAEvF,kBAAC,IAAD,CAAWoN,MAAM,SACf,kBAAC,IAAD,CAAKrM,QAAS,SAACqI,GAAD,OAAQD,GAAOxJ,YAAqBoM,EAAIlM,cAAeuJ,KAAMzJ,YAAqBoM,EAAIlM,cAAcnB,QAEpH,kBAAC,IAAD,CAAW0O,MAAM,SACdrB,EAAIhM,KAAKd,KAAI,SAACe,EAAIyC,GAAL,OAAW,kBAAC,IAAD,CAAKI,IAAKJ,GAAIzC,WAKhDsJ,GAAY,GACX,kBAAC,IAAD,CAAUW,MAAO,CAAEpD,QAASgB,EAAQ,GAAK,IAAMyB,KAC7C,kBAAC,IAAD,CAAW+D,QAAS,QAM9B,kBAAC,IAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BJ,UAAU,MACV1K,MAAOmD,EAAKrD,OACZyF,YAAaA,GACbJ,KAAMA,EACN4F,aAnKiB,SAACpC,EAAOqC,GAC/B5F,EAAQ4F,IAmKFC,oBAhKwB,SAACtC,GAC/BnD,GAAe0F,SAASvC,EAAM3F,OAAOhH,MAAO,KAC5CoJ,EAAQ,OAiKN,kBAAC,IAAD,CACE+F,QAAS,kBAAC,IAAD,CAAQvC,QAASvD,EAAO2C,SA/Jb,SAACW,GACzBrD,EAASqD,EAAM3F,OAAO4F,YA+JlB1M,MAAM,kBAER,kBAAC,IAAD,CAAQ5B,QAAQ,YAAYiE,QA9JV,WACpBiB,IAAuBC,oBA6JrB,yB,yDCpUN,wFAIM2L,EAAY,CAChB,CAAEhL,GAAI,YAAaiL,SAAS,EAAOC,gBAAgB,EAAMpP,MAAO,aAChE,CAAEkE,GAAI,eAAgBiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,gBACnE,CAAEkE,GAAI,QAASiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,SAC5D,CAAEkE,GAAI,OAAQiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,QAC3D,CAAEkE,GAAI,WAAYiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,YAC/D,CAAEkE,GAAI,aAAciL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,cACjE,CAAEkE,GAAI,MAAOiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,OAC1D,CAAEkE,GAAI,eAAgBiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,cACnE,CAAEkE,GAAI,OAAQiL,SAAS,EAAMC,gBAAgB,EAAOpP,MAAO,SAGtD,SAASqP,EAAkBjN,GAAQ,IAChCoG,EAAoFpG,EAApFoG,QAA2BK,GAAyDzG,EAA3EoK,iBAA2EpK,EAAzDyG,OAAOxB,EAAkDjF,EAAlDiF,QAAgCwF,GAAkBzK,EAAzCmK,YAAyCnK,EAA5B2K,SAA4B3K,EAAlByK,eAK1E,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACCqC,EAAU3O,KAAI,SAAC+O,GAAD,OACb,kBAAC,IAAD,CACEnL,IAAKmL,EAASpL,GACdwK,MAAOY,EAASH,QAAU,QAAU,OACpC7G,QAASgH,EAASF,eAAiB,OAAS,UAC5CG,cAAelI,IAAYiI,EAASpL,IAAK2E,GAEzC,kBAAC,IAAD,CACE2G,OAAQnI,IAAYiI,EAASpL,GAC7BuL,UAAWpI,IAAYiI,EAASpL,GAAK2E,EAAQ,MAC7CxG,SAlBeyK,EAkBYwC,EAASpL,GAlBR,SAACuI,GACvCI,EAAcJ,EAAOK,MAmBVwC,EAAStP,MACTqH,IAAYiI,EAASpL,GACpB,0BAAMnG,UAAWyK,EAAQR,gBACZ,SAAVa,EAAmB,oBAAsB,oBAE1C,OAzBU,IAACiE,U","file":"static/js/main.60791cb2.chunk.js","sourcesContent":["import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react'\nimport DetailView from \"./components/DetailView\"\nimport EnhancedTable from \"./components/EnhancedTable\"\nimport { AppBar, Toolbar, Typography, } from '@material-ui/core';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              ZusammenAlleinImVerein\n        </Typography>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path=\"/view/:id\">\n            <DetailView />\n          </Route>\n          <Route path=\"/\" exact>\n            <EnhancedTable />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ItemService, ChallangeItem } from './item-service';\n\nexport interface TagOption {\n  field: string\n  value: any\n  label: string\n}\n\ntype TagCreator = (item: ChallangeItem) => TagOption[]\n\n\nexport const createLevelTag = (value) => ({\n  field: 'Level',\n  value: value,\n  label: `Level ${value}`\n})\n\nconst createLevelTags: TagCreator = (item) => {\n  return [createLevelTag(item.Level)]\n}\n\nexport const createZielTag = (value) => ({\n  field: 'Ziel',\n  value: value,\n  label: value\n})\n\nconst createZielTags: TagCreator = (item) => {\n  return item.Ziel.map(createZielTag)\n}\n\nexport const createTrainingTag = (value) => ({\n  field: 'Training',\n  value: value,\n  label: value\n})\n\nconst createTrainingTags: TagCreator = (item) => {\n  return item.Training.map(createTrainingTag)\n}\n\nexport const createTeilnehmerTag = (value) => ({\n  field: 'Teilnehmer',\n  value: value,\n  label: value\n})\n\nconst createTeilnehmerTags: TagCreator = (item) => {\n  return item.Teilnehmer.map(createTeilnehmerTag)\n}\n\nexport const createOrtTag = (value) => ({\n  field: 'Ort',\n  value: value,\n  label: value\n})\n\nconst createOrtTags: TagCreator = (item) => {\n  return item.Ort.map(createOrtTag)\n}\n\nexport const createAltergruppeTag = (value) => ({\n  field: 'Altersgruppe',\n  value: value,\n  label: `ab ${value} Jahren`\n})\n\nconst createAltersgruppeTags: TagCreator = (item) => {\n  return [createAltergruppeTag(item.Altersgruppe)]\n}\n\nconst createTagsTags: TagCreator = (item) => {\n  return item.Tags.map(el => ({\n    field: 'Tags',\n    value: el,\n    label: el\n  }))\n}\n\nconst createAutocompleteOptions = (): TagOption[] => {\n  const allItems = ItemService.getAll()\n\n  const creators = [\n    createLevelTags,\n    createZielTags,\n    createTrainingTags,\n    createTeilnehmerTags,\n    createOrtTags,\n    createAltersgruppeTags,\n    createTagsTags\n  ]\n\n  /* HashTable with labels as keys */\n  const optionsMap = {}  \n  for (const item of allItems) {\n    for (const creator of creators) {\n      const tags = creator(item)\n\n      for (const tag of tags) {\n        optionsMap[tag.label] = tag\n      }\n    }\n  }\n\n  return Object.values(optionsMap)\n}\n\nexport const AutocompleteService = {\n  createAutocompleteOptions\n}\n","import React, { SyntheticEvent } from 'react'\nimport './Tag.scss'\n\ninterface TagProps {\n  onClick?: (ev: SyntheticEvent) => void\n}\n\nexport const Tag: React.FC<TagProps> = (props) => {\n  return (\n    <span className=\"tag\" onClick={props.onClick}>{props.children}</span>\n  )\n}","import html2canvas from 'html2canvas'\nimport { saveAs } from 'file-saver'\n\nconst createPicture = async (): Promise<Blob> => {\n  const playcard = document.querySelector('#play-card') as HTMLElement\n  const rect = playcard.getBoundingClientRect()\n\n  const canvas = await html2canvas(playcard, { scrollY: rect.y })\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (!blob) {\n        reject('Blob creation failed')\n      }\n\n      resolve(blob!)\n    });\n  })\n}\nconst downloadPicture = async () => {\n  const blob = await createPicture()\n\n  saveAs(blob, 'playcard.png')\n}\n\nexport const PlayCardPictureService = {\n  downloadPicture\n}","import React from 'react'\n\nimport './PlayCard.scss'\n\ninterface PlayCardProps {\n  items?: string[]\n}\n\nconst fillArray = (array: string[], count: number = 16) => {\n  for (let i = array.length; i < count; i++) {\n    array.push('')\n  }\n\n  return array\n}\n\nexport const PlayCard: React.FC<PlayCardProps> = ({ items = []}) => {\n  const displayItems = [...items]\n  if (displayItems.length < 16) {\n    fillArray(displayItems)\n  }\n\n  return (\n    <div className=\"play-card\" id=\"play-card\">\n      {displayItems.map((item, i) => (\n        <div key={i} className=\"play-card__item\">\n          <span className=\"play-card__item-text\">{item}</span>\n        </div>    \n      ))}\n    </div>\n  )\n}","import items from '../items.json'\n\ntype JSONItem = typeof items[0]\n\nenum Ziel {\n  Spass = 'Spass',\n  Socialising = 'Socialising',\n  Training = 'Training',\n}\n\nenum Training {\n  Kraft = 'Kraft',\n  Ausdauer = 'Ausdauer',\n  Geschick = 'Geschick',\n  Schnelligkeit = 'Schnelligkeit',\n}\n\nenum Teilnehmer {\n  alleine = 'alleine',\n  zwei = 'zwei',\n  Team = 'Team',\n}\n\nenum Ort {\n  indoor = 'indoor',\n  outdoor = 'outdoor',\n}\n\nexport interface ChallangeItem {\n  Challange: string\n  Beschreibung: {\n    text: string\n    link: string\n  }\n  Level: number\n  Ziel: Ziel[]\n  Training: Training[]\n  Teilnehmer: Teilnehmer[]\n  Ort: Ort[]\n  Altersgruppe: number\n  Tags: string[]\n}\n\nconst isChecked = (input: string): boolean => {\n  return input === 'x'\n}\n\nconst createOrtField = (item: JSONItem): Ort[] => {\n  const { inddoor, outdoor } = item\n\n  const ort = [] as Ort[]\n\n  if (isChecked(inddoor)) {\n    ort.push(Ort.indoor)\n  }\n\n  if (isChecked(outdoor)) {\n    ort.push(Ort.outdoor)\n  }\n\n  return ort\n}\n\nconst createZielField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Ziel_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Ziel[]\n}\n\nconst createTrainingField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Effekt_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Training[]\n}\n\nconst createTeilnehmerField = (item: JSONItem): Teilnehmer[] => {\n  const { Anzahl_alleine, Anzahl_zwei, Anzahl_team } = item\n\n  const teilnehmer = [] as Teilnehmer[]\n  if (isChecked(Anzahl_alleine)) {\n    teilnehmer.push(Teilnehmer.alleine)\n  }\n  if (isChecked(Anzahl_zwei)) {\n    teilnehmer.push(Teilnehmer.zwei)\n  }\n  if (isChecked(Anzahl_team)) {\n    teilnehmer.push(Teilnehmer.Team)\n  }\n\n  return teilnehmer\n}\n\n\nconst convert = (item: JSONItem): ChallangeItem => {\n  const {\n    Challenge,\n    Beschreibung,\n    Mindestalter,\n    Anleitungslink,\n    Tags\n  } = item\n\n  const Ort = createOrtField(item)\n  const Teilnehmer = createTeilnehmerField(item)\n  const Ziel = createZielField(item)\n  const Training = createTrainingField(item)\n\n  return {\n    Challange: Challenge,\n    Beschreibung: {\n      text: Beschreibung,\n      link: Anleitungslink\n    },\n    Altersgruppe: Mindestalter,\n    Level: 1,\n    Tags: Tags.split(',').map(item => item.trim()).filter(item => !!item),\n    Ort,\n    Teilnehmer,\n    Ziel,\n    Training\n  }\n}\n\nconst getAll = () => {\n  return items.map(convert)\n}\n\nconst getByIndex = (index: number) => {\n  const item = items[index]\n\n  let convertedItem: ChallangeItem | null = null\n  if (!item) {\n    convertedItem = convert(item)\n  }\n\n  return convertedItem\n}\n\nconst getByIndeces = (indeces: number[]): ChallangeItem[] => {\n  return indeces.map(getByIndex).filter(item => !!item) as ChallangeItem[]\n}\n\nexport const ItemService = {\n  getAll,\n  getByIndex,\n  getByIndeces\n}","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport items from '../items.json';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { PlayCard } from './PlayCard';\nimport { SimpleTable } from './SimpleTable';\n\nimport './DetailView.scss'\n\nexport default function DetailView() {\n  let { id } = useParams();\n  const selected = getSelection(id)\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  function getSelection(id) {\n    /* truncate first the numbers */\n    var indexes = new Buffer(id, 'base64').toString('ascii').split(\",\", 25)\n    /* filter items */\n    const elems = indexes.map(i => items[i])\n    return elems\n  }\n\n  return (\n    <div className=\"root\">\n      <div className=\"rules\">\n        <h2>Regeln:</h2>\n        <ul>\n          <li>In welcher Reihenfolge du die Challenges erledigst ist dir überlassen</li>\n          <li>Jede Challenge wird genau einmal gewertet, du warst sie aber natürlich so oft du willst absolvieren</li>\n          <li>Pro Tag darfst du eine Challenge einreichen</li>\n          <li>Als Challengebeweis postest du ein Foto, Video oder Screenshot (z.b. absolvierte Strecke in Running App). Wenn du bescheißt, dann nur dich selbst.</li>\n          <li>Hast du eine Challenge absolviert, kannst du sie wegstreichen, du selbst behältst den Überblick.</li>\n          <li>Wenn du alle Challenges geschafft hast, beweis es mit einer Fotocollage und freu dich - Du hast dich Fit gehalten!</li>\n        </ul>\n      </div>\n      <PlayCard items={selected.map(item => item.Challenge)} />\n      <SimpleTable items={selected} />\n\n      <div className=\"buttonBar\">\n        <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n      </div>\n    </div>\n  );\n}","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport React from 'react';\n\nimport './SimpleTable.scss'\nimport { Paper } from '@material-ui/core';\n\ninterface SimpleTableProps {\n    items?: any[]\n}\n\nexport const SimpleTable: React.FC<SimpleTableProps> = ({ items = [] }) => {\n    const displayItems = [...items]\n    return (\n        <div className=\"simple-table\">\n                {displayItems.map((item: any, index: number) => {\n                    return (\n                        <Paper variant=\"outlined\">\n                            <div>{item.Challange}</div>\n                            <div>{item.Beschreibung}</div>\n                            <div>{item.Anleitungslink && <a target=\"_blank\" rel=\"noopener noreferrer\" href={item.Anleitungslink}>Anleitung</a>}</div>\n                        </Paper>\n                    );\n                })}\n        </div>\n    );\n}","import { Button, TextField } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { SyntheticEvent, useEffect } from 'react';\nimport { EnhancedTableHead } from './EnhancedTableHead';\nimport { PlayCard } from './PlayCard';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { useHistory } from \"react-router-dom\";\nimport { ItemService, ChallangeItem } from '../services/item-service';\nimport { Tag } from './Tag';\nimport { AutocompleteService, createLevelTag, TagOption, createZielTag, createTrainingTag, createOrtTag, createTeilnehmerTag, createAltergruppeTag } from '../services/autocomplete-service';\n\nconst rows = ItemService.getAll()\nconst autoCompleteOptions = AutocompleteService.createAutocompleteOptions()\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [selectedTags, setSelectedTags] = React.useState([] as string[])\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([] as string[]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const history = useHistory();\n\n  const createWhatsAppLink = (): string => {\n    const text = \"Hier ist deine neue Bingokarte: \"\n    return \"whatsapp://send?text=\" + encodeURI(text + absoluteCopyLink)\n  }\n  const createAbsoluteLink = (): string => {\n    const currentLoc = window.location.href;\n    return currentLoc.slice(0, currentLoc.length - 1) + copyLink;\n  }\n  const createLink = (): string => {\n    return '/view/' + new Buffer(selected.map((i, idx) => rows.findIndex(it => it.Challange === i)).join(',')).toString('base64')\n  }\n  const navigateToLink = () => {\n    history.push(createLink())\n  }\n\n  const [copyLink, setCopyLink] = React.useState('');\n  const [absoluteCopyLink, setAbsoluteCopyLink] = React.useState('');\n  const [whatsappLink, setWhatsappLink] = React.useState('');\n\n  useEffect(() => {\n    setCopyLink(createLink())\n  }, [selected])\n\n  useEffect(() => {\n    setAbsoluteCopyLink(createAbsoluteLink())\n  }, [copyLink])\n\n  useEffect(() => {\n    setWhatsappLink(createWhatsAppLink())\n  }, [absoluteCopyLink])\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.Challange);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [] as string[];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  const addTag = (tag: TagOption, ev: SyntheticEvent) => {\n    ev.stopPropagation()\n    setSelectedTags([...selectedTags, tag.label])\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const copyToClipboard = e => {\n    navigator.clipboard.writeText(absoluteCopyLink);\n  }\n\n  const tagsToFilterBy = autoCompleteOptions.filter(option => selectedTags.includes(option.label))\n\n  return (\n    <div className={classes.root}>\n      <PlayCard items={selected} />\n      <div>\n        <TextField id=\"copy-link\" InputProps={{\n          readOnly: true,\n        }} value={absoluteCopyLink} />\n        <Button variant=\"contained\" onClick={copyToClipboard}>Copy</Button>\n      </div>\n      <div>\n        <Button variant=\"contained\" onClick={navigateToLink}>Gehe zu Seite</Button>\n      </div>\n      <div className=\"button-whatsapp\">\n        <a href={whatsappLink}>In Whatsapp teilen</a>\n      </div>\n      <Paper className={classes.paper}>\n        <form style={{ display: 'inline-block' }} noValidate autoComplete=\"off\" onSubmit={console.log}>\n          <Autocomplete \n            multiple\n            value={selectedTags}\n            onChange={(ev, val) => setSelectedTags(val)}\n            autoSelect={true}\n            options={autoCompleteOptions.map(el => el.label)}\n            renderInput={params => (\n              <TextField style={{ width: '500px'}} variant=\"outlined\" label=\"Suche\" {...params} />\n            )} />\n        </form>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order as any, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .filter((row: ChallangeItem, index) => {\n                  if (tagsToFilterBy.length === 0) {\n                    return true\n                  }\n\n                  return tagsToFilterBy.every(tag => {\n                    const rowValue = row[tag.field]\n                    if (Array.isArray(rowValue)) {\n                      return rowValue.some(val => val === tag.value)\n                    } else {\n                      return row[tag.field] === tag.value\n                    }\n                  })\n                }) \n                .map((row: ChallangeItem, index: number) => {\n                  const isItemSelected = isSelected(row.Challange);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.Challange)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.Challange}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.Challange}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <span>\n                          {row.Beschreibung.text}\n                        </span>\n                        <br/>\n                        {!!row.Beschreibung.link ? \n                          (<span><strong>Link: </strong><a href={row.Beschreibung.link}>{row.Beschreibung.link}</a></span>)\n                          : null\n                        }\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Tag onClick={(ev) => addTag(createLevelTag(row.Level), ev)}>{createLevelTag(row.Level).label}</Tag>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.Ziel.map((el, i) => <Tag onClick={(ev) => addTag(createZielTag(el), ev)} key={i}>{createZielTag(el).label}</Tag>)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.Training.map((el, i) => <Tag onClick={(ev) => addTag(createTrainingTag(el), ev)} key={i}>{el}</Tag>)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.Teilnehmer.map((el, i) => <Tag onClick={(ev) => addTag(createTeilnehmerTag(el), ev)} key={i}>{el}</Tag>)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.Ort.map((el, i) => <Tag onClick={(ev) => addTag(createOrtTag(el), ev)} key={i}>{el}</Tag>)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Tag onClick={(ev) => addTag(createAltergruppeTag(row.Altersgruppe), ev)}>{createAltergruppeTag(row.Altersgruppe).label}</Tag>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.Tags.map((el, i) => <Tag key={i}>{el}</Tag>)}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <Button variant=\"contained\" onClick={createPicture}>Karte exportieren</Button>\n    </div>\n  );\n}","import React from \"react\";\nimport { TableHead, TableRow, TableCell, Checkbox, TableSortLabel } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nconst headCells = [\n  { id: 'Challenge', numeric: false, disablePadding: true, label: 'Challenge' },\n  { id: 'Beschreibung', numeric: true, disablePadding: false, label: 'Beschreibung' },\n  { id: 'Level', numeric: true, disablePadding: false, label: 'Level' },\n  { id: 'Ziel', numeric: true, disablePadding: false, label: 'Ziel' },\n  { id: 'Training', numeric: true, disablePadding: false, label: 'Training' },\n  { id: 'Teilnehmer', numeric: true, disablePadding: false, label: 'Teilnehmer' },\n  { id: 'Ort', numeric: true, disablePadding: false, label: 'Ort' },\n  { id: 'Altersgruppe', numeric: true, disablePadding: false, label: 'Alterstufe' },\n  { id: 'Tags', numeric: true, disablePadding: false, label: 'Tags' },\n];\n\nexport function EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};"],"sourceRoot":""}