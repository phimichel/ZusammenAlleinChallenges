{"version":3,"sources":["customTheme.ts","App.tsx","serviceWorker.ts","index.tsx","services/autocomplete-service.ts","components/Tag.tsx","services/play-card-picture-service.ts","components/PlayCard.tsx","services/item-service.ts","components/DetailView.tsx","components/SimpleTable.tsx","components/EnhancedTable.tsx","components/EnhancedTableHead.tsx"],"names":["customTheme","createMuiTheme","palette","primary","main","data","warning","success","overrides","MuiCard","root","padding","width","margin","MuiTable","MuiTableHead","borderBottom","light","MuiTableRow","backgroundColor","lighter","MuiTableCell","alignRight","span","color","border","borderRadius","MuiTableSortLabel","gray","dark","MuiButton","boxShadow","opacity","bg","contained","MuiLink","textDecoration","MuiCheckbox","MuiSvgIcon","fill","MuiAppBar","colorPrimary","MuiBadge","MuiPaper","MuiOutlinedInput","typography","fontFamily","button","fontSize","fontWeight","h2","textAlign","h3","h6","h4","textTransform","body1","lineHeight","subtitle1","App","ThemeProvider","theme","className","AppBar","position","Toolbar","Typography","variant","exact","path","DetailView","EnhancedTable","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","createLevelTag","value","field","label","createLevelTags","item","Level","createZielTag","createZielTags","Ziel","map","createTrainingTag","createTrainingTags","Training","createTeilnehmerTag","createTeilnehmerTags","Teilnehmer","createOrtTag","createOrtTags","Ort","createAltergruppeTag","createAltersgruppeTags","Altersgruppe","createTagsTags","Tags","el","AutocompleteService","createAutocompleteOptions","allItems","ItemService","getAll","creators","optionsMap","tags","creator","tag","Object","values","Tag","props","onClick","children","createPicture","a","playcard","querySelector","documentRect","getBoundingClientRect","rect","html2canvas","y","Math","abs","top","scale","canvas","Promise","resolve","reject","toBlob","blob","PlayCardPictureService","downloadPicture","saveAs","PlayCard","items","displayItems","length","array","count","i","push","fillArray","id","key","isChecked","input","createOrtField","inddoor","outdoor","ort","indoor","createTeilnehmerField","Anzahl_alleine","Anzahl_zwei","Anzahl_team","teilnehmer","alleine","zwei","Team","convert","Challenge","Beschreibung","Mindestalter","Anleitungslink","entries","filter","entry","startsWith","split","createZielField","createTrainingField","Challange","text","link","trim","getByIndex","index","convertedItem","getByIndeces","indeces","selected","Buffer","toString","getSelection","useParams","SimpleTable","style","marginBottom","marginTop","target","rel","href","rows","autoCompleteOptions","descendingComparator","b","orderBy","useStyles","makeStyles","paper","spacing","table","minWidth","visuallyHidden","clip","height","overflow","classes","React","useState","selectedTags","setSelectedTags","order","setOrder","setOrderBy","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","copyLink","setCopyLink","absoluteCopyLink","setAbsoluteCopyLink","whatsappLink","setWhatsappLink","history","useHistory","createLink","idx","findIndex","it","join","useEffect","currentLoc","basePath","slice","log","createAbsoluteLink","encodeURIComponent","createWhatsAppLink","addTag","ev","stopPropagation","tagsToFilterBy","option","includes","e","clipboard","writeText","display","marginLeft","noValidate","autoComplete","onSubmit","multiple","onChange","val","autoSelect","options","renderInput","params","aria-labelledby","size","aria-label","numSelected","onSelectAllClick","event","checked","newSelecteds","n","onRequestSort","property","rowCount","comparator","stabilizedThis","sort","stableSort","getComparator","row","every","rowValue","Array","isArray","some","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","inputProps","component","scope","align","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","headCells","numeric","disablePadding","EnhancedTableHead","headCell","sortDirection","active","direction"],"mappings":"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","file":"static/js/main.825f2f98.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core'\nimport data from './colors.json'\n\nexport const customTheme = createMuiTheme({\n  palette: {\n    primary: { main: data.primary.main },\n    warning: { main: data.warning.main },\n    success: { main: data.success.main }\n  },\n  overrides: {\n    MuiCard: {\n      root: {\n        padding: '1.5em 2em',\n        width: '90%',\n        margin: '20px auto',\n      }\n    },\n    MuiTable: {\n      root: {\n\n      }\n    },\n    MuiTableHead: {\n      root: {\n        borderBottom: '3px solid ' +  data.primary.light\n      }\n    },\n    MuiTableRow: {\n      root: {\n        '&$selected': {\n          backgroundColor: data.primary.lighter\n        }\n      }\n    },\n    MuiTableCell: {\n      alignRight: {\n        span: {\n          color: data.primary.main,\n          padding: '5px 10px',\n          border: '1px solid ' + data.primary.main,\n          backgroundColor: data.primary.light,\n          borderRadius: 3\n        }\n      }\n    },\n    MuiTableSortLabel: {\n      root: {\n        color: data.gray.dark\n      }\n    },\n    MuiButton: {\n      root: {\n        borderRadius: 3,\n        padding: '1em 2em',\n        boxShadow: '0px 3px 6px ' + data.gray.light,\n        backgroundColor: data.primary.light,\n        '&$disabled': {\n          opacity: 1,\n          backgroundColor: data.gray.bg,\n        }\n      },\n      contained: {\n        color: '#ffffff',\n        borderRadius: 3,\n        padding: '1em 2em',\n        boxShadow: '0px 3px 6px ' + data.gray.light,\n        backgroundColor: data.primary.light,\n      },\n    },\n    MuiLink: {\n      root: {\n        color: data.primary.light,\n        textDecoration: 'none'\n      }\n    },\n    MuiCheckbox: {\n      root: {\n\n      }\n    },\n    MuiSvgIcon: {\n      root: {\n        fill: data.primary.light\n      }\n    },\n    MuiAppBar: {\n      root: {\n        boxShadow: 'none',\n      },\n      colorPrimary: {\n        backgroundColor: data.primary.main\n      }\n    },\n    MuiBadge: {\n      colorPrimary: {\n        color: '#ffffff'\n      }\n    },\n    MuiPaper: {\n      root: {\n        borderRadius: 0\n      }\n    },\n    MuiOutlinedInput: {\n      root: {\n        borderRadius: 35\n      }\n    },\n  },\n  typography: {\n    fontFamily: 'Roboto, Helvetica, sans-serif',\n    button: {\n      fontSize: '0.65em',\n      fontWeight: 900\n    },\n    h2: {\n      color: data.primary.light,\n      fontSize: '28px',\n      textAlign: 'center',\n      fontWeight: 400,\n      margin: '50px 20px 20px'\n    },\n    h3: {\n      textAlign: 'left',\n      color: data.primary.light,\n      margin: '20px 0px',\n      fontSize: '24px'\n    },\n    h6: {\n      textAlign: 'center'\n    },\n    h4: {\n      color: data.primary.main,\n      fontSize: '0.85rem',\n      textTransform: 'uppercase'\n    },\n    body1: {\n      lineHeight: 1\n    },\n    subtitle1: {\n      textAlign: 'center',\n      fontSize: '14px'\n    }\n  }\n})","import { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport React from 'react'\nimport DetailView from \"./components/DetailView\"\nimport EnhancedTable from \"./components/EnhancedTable\"\nimport { AppBar, Toolbar, Typography, ThemeProvider, Backdrop, CircularProgress } from '@material-ui/core';\nimport { customTheme } from \"./customTheme\"\n\nconst App = () => {\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Router>\n      <div className=\"app\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            ZusammenAlleinImVerein\n          </Typography>\n        </Toolbar>\n      </AppBar>\n        <Switch>\n          <Route exact path=\"/view/:id\">\n            <DetailView />\n          </Route>\n          <Route path=\"/\" exact>\n            <EnhancedTable />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </ThemeProvider>\n  )}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ItemService, ChallangeItem } from './item-service';\n\nexport interface TagOption {\n  field: string\n  value: any\n  label: string\n}\n\ntype TagCreator = (item: ChallangeItem) => TagOption[]\n\n\nexport const createLevelTag = (value) => ({\n  field: 'Level',\n  value: value,\n  label: `Level ${value}`\n})\n\nconst createLevelTags: TagCreator = (item) => {\n  return [createLevelTag(item.Level)]\n}\n\nexport const createZielTag = (value) => ({\n  field: 'Ziel',\n  value: value,\n  label: value\n})\n\nconst createZielTags: TagCreator = (item) => {\n  return item.Ziel.map(createZielTag)\n}\n\nexport const createTrainingTag = (value) => ({\n  field: 'Training',\n  value: value,\n  label: value\n})\n\nconst createTrainingTags: TagCreator = (item) => {\n  return item.Training.map(createTrainingTag)\n}\n\nexport const createTeilnehmerTag = (value) => ({\n  field: 'Teilnehmer',\n  value: value,\n  label: value\n})\n\nconst createTeilnehmerTags: TagCreator = (item) => {\n  return item.Teilnehmer.map(createTeilnehmerTag)\n}\n\nexport const createOrtTag = (value) => ({\n  field: 'Ort',\n  value: value,\n  label: value\n})\n\nconst createOrtTags: TagCreator = (item) => {\n  return item.Ort.map(createOrtTag)\n}\n\nexport const createAltergruppeTag = (value) => ({\n  field: 'Altersgruppe',\n  value: value,\n  label: `ab ${value} Jahren`\n})\n\nconst createAltersgruppeTags: TagCreator = (item) => {\n  return [createAltergruppeTag(item.Altersgruppe)]\n}\n\nconst createTagsTags: TagCreator = (item) => {\n  return item.Tags.map(el => ({\n    field: 'Tags',\n    value: el,\n    label: el\n  }))\n}\n\nconst createAutocompleteOptions = (): TagOption[] => {\n  const allItems = ItemService.getAll()\n\n  const creators = [\n    createLevelTags,\n    createZielTags,\n    createTrainingTags,\n    createTeilnehmerTags,\n    createOrtTags,\n    createAltersgruppeTags,\n    createTagsTags\n  ]\n\n  /* HashTable with labels as keys */\n  const optionsMap = {}  \n  for (const item of allItems) {\n    for (const creator of creators) {\n      const tags = creator(item)\n\n      for (const tag of tags) {\n        optionsMap[tag.label] = tag\n      }\n    }\n  }\n\n  return Object.values(optionsMap)\n}\n\nexport const AutocompleteService = {\n  createAutocompleteOptions\n}\n","import React, { SyntheticEvent } from 'react'\nimport './Tag.scss'\n\ninterface TagProps {\n  onClick?: (ev: SyntheticEvent) => void\n}\n\nexport const Tag: React.FC<TagProps> = (props) => {\n  return (\n    <span className=\"tag\" onClick={props.onClick}>{props.children}</span>\n  )\n}","import html2canvas from 'html2canvas'\nimport { saveAs } from 'file-saver'\n\nconst createPicture = async (): Promise<Blob> => {\n  const playcard = document.querySelector('#play-card') as HTMLElement\n  const documentRect = document.querySelector('body')?.getBoundingClientRect()\n  const rect = playcard.getBoundingClientRect()\n\n  const canvas = await html2canvas(playcard, { y: Math.abs(documentRect!.top - rect.top), scale: 1 })\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (!blob) {\n        reject('Blob creation failed')\n      }\n\n      resolve(blob!)\n    });\n  })\n}\nconst downloadPicture = async () => {\n  const blob = await createPicture()\n\n  saveAs(blob, 'playcard.png')\n}\n\nexport const PlayCardPictureService = {\n  downloadPicture\n}","import React from 'react'\n\nimport './PlayCard.scss'\n\ninterface PlayCardProps {\n  items?: string[]\n}\n\nconst fillArray = (array: string[], count: number = 16) => {\n  for (let i = array.length; i < count; i++) {\n    array.push('')\n  }\n\n  return array\n}\n\nexport const PlayCard: React.FC<PlayCardProps> = ({ items = []}) => {\n  const displayItems = [...items]\n  if (displayItems.length < 16) {\n    fillArray(displayItems)\n  }\n\n  return (\n        <div className=\"play-card\" id=\"play-card\">\n          {displayItems.map((item, i) => (\n            <div key={i} className=\"play-card__item\">\n              <span className=\"play-card__item-text\">{item}</span>\n            </div>    \n          ))}\n        </div>\n  )\n}","import items from '../items.json'\n\ntype JSONItem = typeof items[0]\n\nenum Ziel {\n  Spass = 'Spass',\n  Socialising = 'Socialising',\n  Training = 'Training',\n}\n\nenum Training {\n  Kraft = 'Kraft',\n  Ausdauer = 'Ausdauer',\n  Geschick = 'Geschick',\n  Schnelligkeit = 'Schnelligkeit',\n}\n\nenum Teilnehmer {\n  alleine = 'alleine',\n  zwei = 'zwei',\n  Team = 'Team',\n}\n\nenum Ort {\n  indoor = 'indoor',\n  outdoor = 'outdoor',\n}\n\nexport interface ChallangeItem {\n  Challange: string\n  Beschreibung: {\n    text: string\n    link: string\n  }\n  Level: number\n  Ziel: Ziel[]\n  Training: Training[]\n  Teilnehmer: Teilnehmer[]\n  Ort: Ort[]\n  Altersgruppe: number\n  Tags: string[]\n}\n\nconst isChecked = (input: string): boolean => {\n  return input === 'x'\n}\n\nconst createOrtField = (item: JSONItem): Ort[] => {\n  const { inddoor, outdoor } = item\n\n  const ort = [] as Ort[]\n\n  if (isChecked(inddoor)) {\n    ort.push(Ort.indoor)\n  }\n\n  if (isChecked(outdoor)) {\n    ort.push(Ort.outdoor)\n  }\n\n  return ort\n}\n\nconst createZielField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Ziel_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Ziel[]\n}\n\nconst createTrainingField = (item: JSONItem) => {\n  return Object.entries(item)\n    .filter(entry => entry[0].startsWith('Effekt_'))\n    .filter(entry => isChecked(entry[1] as string))\n    .map(entry => entry[0].split('_')[1]) as Training[]\n}\n\nconst createTeilnehmerField = (item: JSONItem): Teilnehmer[] => {\n  const { Anzahl_alleine, Anzahl_zwei, Anzahl_team } = item\n\n  const teilnehmer = [] as Teilnehmer[]\n  if (isChecked(Anzahl_alleine)) {\n    teilnehmer.push(Teilnehmer.alleine)\n  }\n  if (isChecked(Anzahl_zwei)) {\n    teilnehmer.push(Teilnehmer.zwei)\n  }\n  if (isChecked(Anzahl_team)) {\n    teilnehmer.push(Teilnehmer.Team)\n  }\n\n  return teilnehmer\n}\n\n\nconst convert = (item: JSONItem): ChallangeItem => {\n  const {\n    Challenge,\n    Beschreibung,\n    Mindestalter,\n    Anleitungslink,\n    Tags\n  } = item\n\n  const Ort = createOrtField(item)\n  const Teilnehmer = createTeilnehmerField(item)\n  const Ziel = createZielField(item)\n  const Training = createTrainingField(item)\n\n  return {\n    Challange: Challenge,\n    Beschreibung: {\n      text: Beschreibung,\n      link: Anleitungslink\n    },\n    Altersgruppe: Mindestalter,\n    Level: 1,\n    Tags: Tags.split(',').map(item => item.trim()).filter(item => !!item),\n    Ort,\n    Teilnehmer,\n    Ziel,\n    Training\n  }\n}\n\nconst getAll = () => {\n  return items.map(convert)\n}\n\nconst getByIndex = (index: number) => {\n  const item = items[index]\n\n  let convertedItem: ChallangeItem | null = null\n  if (!item) {\n    convertedItem = convert(item)\n  }\n\n  return convertedItem\n}\n\nconst getByIndeces = (indeces: number[]): ChallangeItem[] => {\n  return indeces.map(getByIndex).filter(item => !!item) as ChallangeItem[]\n}\n\nexport const ItemService = {\n  getAll,\n  getByIndex,\n  getByIndeces\n}","import { Button, Typography, Card } from '@material-ui/core';\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport items from '../items.json';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { PlayCard } from './PlayCard';\nimport { SimpleTable } from './SimpleTable';\n\nimport './DetailView.scss'\n\nexport default function DetailView() {\n  let { id } = useParams();\n  const selected = getSelection(id)\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  function getSelection(id) {\n    /* truncate first the numbers */\n    var indexes = new Buffer(id, 'base64').toString('ascii').split(\",\", 25)\n    /* filter items */\n    const elems = indexes.map(i => items[i])\n    return elems\n  }\n\n  return (\n    <div className=\"root\">\n      <Typography variant=\"h2\">\n        Willkommen bei deiner<br/>ZusammenAlleinImVerein-Challenge\n      </Typography>\n      <Card className=\"half\">\n        <Typography variant=\"h3\">\n          Challenge-Card\n        </Typography>\n        <PlayCard items={selected.map(item => item.Challenge)} />\n      </Card>\n      <Card className=\"half\">\n      <div className=\"rules\">\n        <Typography variant=\"h3\">\n          Allgemeine Regeln\n        </Typography>\n        <ol className=\"rules\">\n          <li>In welcher Reihenfolge du die Challenges erledigst ist dir überlassen</li>\n          <li>Jede Challenge wird genau einmal gewertet, du warst sie aber natürlich so oft du willst absolvieren</li>\n          <li>Pro Tag darfst du eine Challenge einreichen</li>\n          <li>Als Challengebeweis postest du ein Foto, Video oder Screenshot (z.b. absolvierte Strecke in Running App). Wenn du bescheißt, dann nur dich selbst.</li>\n          <li>Hast du eine Challenge absolviert, kannst du sie wegstreichen, du selbst behältst den Überblick.</li>\n          <li>Wenn du alle Challenges geschafft hast, beweis es mit einer Fotocollage und freu dich - Du hast dich Fit gehalten!</li>\n        </ol>\n      </div>\n      </Card>\n      <Card>\n        <Typography variant=\"h3\">\n            Challenges\n        </Typography>\n        <SimpleTable items={selected} />\n      </Card>\n    </div>\n  );\n}","import React from 'react';\n\nimport './SimpleTable.scss'\nimport { Paper } from '@material-ui/core';\n\ninterface SimpleTableProps {\n    items?: any[]\n}\n\nexport const SimpleTable: React.FC<SimpleTableProps> = ({ items = [] }) => {\n    const displayItems = [...items]\n    return (\n        <div className=\"card\" id=\"table-card\">\n            <div className=\"simple-table\">\n                    {displayItems.map((item: any, index: number) => {\n                        return (\n                            <Paper variant=\"outlined\">\n                                <div style={{ marginBottom: '20px' }}><strong>{item.Challenge}</strong></div>\n                                <div>{item.Beschreibung}</div>\n                                <div style={{ marginTop: '20px' }}>{item.Anleitungslink && <a target=\"_blank\" rel=\"noopener noreferrer\" href={item.Anleitungslink}>Anleitung</a>}</div>\n                            </Paper>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}","import { Button, TextField, Typography, Card, Link } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { SyntheticEvent, useEffect } from 'react';\nimport { EnhancedTableHead } from './EnhancedTableHead';\nimport { PlayCard } from './PlayCard';\nimport { PlayCardPictureService } from '../services/play-card-picture-service';\nimport { useHistory } from \"react-router-dom\";\nimport { ItemService, ChallangeItem } from '../services/item-service';\nimport { Tag } from './Tag';\nimport { AutocompleteService, createLevelTag, TagOption, createZielTag, createTrainingTag, createOrtTag, createTeilnehmerTag, createAltergruppeTag } from '../services/autocomplete-service';\n\nconst rows = ItemService.getAll()\nconst autoCompleteOptions = AutocompleteService.createAutocompleteOptions()\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: (a: any, b: any) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: '0',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [selectedTags, setSelectedTags] = React.useState([] as string[])\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([] as string[]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const [copyLink, setCopyLink] = React.useState('');\n  const [absoluteCopyLink, setAbsoluteCopyLink] = React.useState('');\n  const [whatsappLink, setWhatsappLink] = React.useState('');\n\n  const history = useHistory();\n\n  const createWhatsAppLink = (): string => {\n    const text = \"Hier ist deine neue Bingokarte: \"\n    const link = \"whatsapp://send?text=\" + encodeURIComponent(text + absoluteCopyLink)\n    console.log('whatsapp link', link)\n\n    return link\n  }\n  const createAbsoluteLink = (): string => {\n    const currentLoc = window.location.href;\n    const basePath = currentLoc.slice(0, currentLoc.length - 1)\n\n    console.log(basePath, copyLink)\n    return basePath + copyLink;\n  }\n  const createLink = (): string => {\n    return '/view/' + new Buffer(selected.map((i, idx) => rows.findIndex(it => it.Challange === i)).join(',')).toString('base64')\n  }\n  const navigateToLink = () => {\n    history.push(createLink())\n  }\n\n  useEffect(() => {\n    setCopyLink(createLink())\n  }, [selected])\n\n  useEffect(() => {\n    setAbsoluteCopyLink(createAbsoluteLink())\n  }, [copyLink])\n\n  useEffect(() => {\n    setWhatsappLink(createWhatsAppLink())\n  }, [absoluteCopyLink])\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.Challange);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [] as string[];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const createPicture = () => {\n    PlayCardPictureService.downloadPicture()\n  }\n\n  const addTag = (tag: TagOption, ev: SyntheticEvent) => {\n    ev.stopPropagation()\n    setSelectedTags([...selectedTags, tag.label])\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const copyToClipboard = e => {\n    navigator.clipboard.writeText(absoluteCopyLink);\n  }\n\n  const tagsToFilterBy = autoCompleteOptions.filter(option => selectedTags.includes(option.label))\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">\n        Challenge-Card\n      </Typography>\n      <Card>\n        <PlayCard items={selected} />\n          <Button variant=\"contained\" onClick={copyToClipboard} className=\"map-btn\">Kopiere Link</Button>\n          <Button variant=\"contained\" onClick={navigateToLink} className=\"map-btn\">Gehe zu Seite</Button>\n          <Button variant=\"contained\" className=\"button-whatsapp map-btn\"><a href={whatsappLink}>In Whatsapp teilen</a></Button>\n          <Button variant=\"contained\" onClick={createPicture} className=\"map-btn\">Karte als Bild runterladen</Button>\n      </Card>\n      <Typography variant=\"h2\">\n        Challenges\n      </Typography>\n      <form style={{ display: 'inline-block', marginLeft: '40px' }} noValidate autoComplete=\"off\" onSubmit={console.log}>\n        <Autocomplete \n          multiple\n          value={selectedTags}\n          onChange={(ev, val) => setSelectedTags(val)}\n          autoSelect={true}\n          options={autoCompleteOptions.map(el => el.label)}\n          renderInput={params => (\n            <TextField style={{ width: '500px'}} variant=\"outlined\" label=\"Suche\" {...params} />\n          )} />\n      </form>\n      <Card>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? 'small' : 'medium'}\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order as any, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .filter((row: ChallangeItem, index) => {\n                    if (tagsToFilterBy.length === 0) {\n                      return true\n                    }\n  \n                    return tagsToFilterBy.every(tag => {\n                      const rowValue = row[tag.field]\n                      if (Array.isArray(rowValue)) {\n                        return rowValue.some(val => val === tag.value)\n                      } else {\n                        return row[tag.field] === tag.value\n                      }\n                    })\n                  })   \n                  .map((row: ChallangeItem, index: number) => {\n                    const isItemSelected = isSelected(row.Challange);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.Challange)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.Challange}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ 'aria-labelledby': labelId }}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.Challange}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <span>\n                            {row.Beschreibung.text}\n                          </span>\n                          <br/>\n                          {!!row.Beschreibung.link ? \n                            (<span><strong>Link: </strong><Link href={row.Beschreibung.link}>{row.Beschreibung.link}</Link></span>)\n                            : null\n                          }\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Tag onClick={(ev) => addTag(createLevelTag(row.Level), ev)}>{createLevelTag(row.Level).label}</Tag>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.Ziel.map((el, i) => <Tag onClick={(ev) => addTag(createZielTag(el), ev)} key={i}>{createZielTag(el).label}</Tag>)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.Training.map((el, i) => <Tag onClick={(ev) => addTag(createTrainingTag(el), ev)} key={i}>{el}</Tag>)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.Teilnehmer.map((el, i) => <Tag onClick={(ev) => addTag(createTeilnehmerTag(el), ev)} key={i}>{el}</Tag>)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.Ort.map((el, i) => <Tag onClick={(ev) => addTag(createOrtTag(el), ev)} key={i}>{el}</Tag>)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Tag onClick={(ev) => addTag(createAltergruppeTag(row.Altersgruppe), ev)}>{createAltergruppeTag(row.Altersgruppe).label}</Tag>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.Tags.map((el, i) => <Tag key={i}>{el}</Tag>)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n      </Card>\n    </div>\n  );\n}","import React from \"react\";\nimport { TableHead, TableRow, TableCell, TableSortLabel } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\n\nconst headCells = [\n  { id: 'Challenge', numeric: false, disablePadding: true, label: 'Challenge' },\n  { id: 'Beschreibung', numeric: true, disablePadding: false, label: 'Beschreibung' },\n  { id: 'Level', numeric: true, disablePadding: false, label: 'Level' },\n  { id: 'Ziel', numeric: true, disablePadding: false, label: 'Ziel' },\n  { id: 'Training', numeric: true, disablePadding: false, label: 'Training' },\n  { id: 'Teilnehmer', numeric: true, disablePadding: false, label: 'Teilnehmer' },\n  { id: 'Ort', numeric: true, disablePadding: false, label: 'Ort' },\n  { id: 'Altersgruppe', numeric: true, disablePadding: false, label: 'Alterstufe' },\n  { id: 'Tags', numeric: true, disablePadding: false, label: 'Tags' },\n];\n\nexport function EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};"],"sourceRoot":""}